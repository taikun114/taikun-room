import { jsx as i } from "react/jsx-runtime";
import { forwardRef as r, Children as a } from "react";
import { Root as c, Content as p, Trigger as C } from "@radix-ui/react-collapsible";
import { getClosestInstance as l } from "@webstudio-is/react-sdk/runtime";
const h = c, g = r(({ children: e, ...o }, t) => {
  const n = a.toArray(e)[0];
  return /* @__PURE__ */ i(C, { asChild: !0, ref: t, ...o, children: n ?? /* @__PURE__ */ i("button", { children: "Add button" }) });
}), u = p, s = "@webstudio-is/sdk-components-react-radix", P = {
  onNavigatorSelect: (e, o) => {
    for (const t of o.instancePath)
      if (t.component === `${s}:CollapsibleContent`) {
        const n = l(
          o.instancePath,
          t,
          `${s}:Collapsible`
        );
        n && e.setMemoryProp(n, "open", !0);
      }
  },
  onNavigatorUnselect: (e, o) => {
    for (const t of o.instancePath)
      if (t.component === `${s}:CollapsibleContent`) {
        const n = l(
          o.instancePath,
          t,
          `${s}:Collapsible`
        );
        n && e.setMemoryProp(n, "open", void 0);
      }
  }
};
export {
  h as Collapsible,
  u as CollapsibleContent,
  g as CollapsibleTrigger,
  P as hooksCollapsible
};
