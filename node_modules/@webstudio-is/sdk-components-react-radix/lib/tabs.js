import { jsx as i } from "react/jsx-runtime";
import u from "await-interaction-response";
import { forwardRef as c, useCallback as f } from "react";
import { useControllableState as b } from "@radix-ui/react-use-controllable-state";
import { List as p, Root as T, Trigger as d, Content as h } from "@radix-ui/react-tabs";
import { getIndexWithinAncestorFromProps as g } from "@webstudio-is/sdk/runtime";
import { getClosestInstance as l } from "@webstudio-is/react-sdk/runtime";
const k = c(({ defaultValue: e, ...n }, o) => {
  const [t, a] = b({
    prop: n.value,
    defaultProp: e ?? "",
    onChange: n.onValueChange
  }), s = f(
    async (m) => {
      await u(), a(m);
    },
    [a]
  );
  return /* @__PURE__ */ i(
    T,
    {
      ref: o,
      ...n,
      value: t,
      onValueChange: s
    }
  );
}), w = p, y = c(({ value: e, ...n }, o) => {
  const t = g(n);
  return /* @__PURE__ */ i(d, { ref: o, value: e ?? t ?? "", ...n });
}), A = c(({ value: e, ...n }, o) => {
  const t = g(n);
  return /* @__PURE__ */ i(h, { ref: o, value: e ?? t ?? "", ...n });
}), r = "@webstudio-is/sdk-components-react-radix", R = {
  onNavigatorSelect: (e, n) => {
    var o;
    for (const t of n.instancePath)
      if (t.component === `${r}:TabsContent` || t.component === `${r}:TabsTrigger`) {
        const a = l(
          n.instancePath,
          t,
          `${r}:Tabs`
        ), s = e.getPropValue(t, "value") ?? ((o = e.indexesWithinAncestors.get(t.id)) == null ? void 0 : o.toString());
        a && s && e.setMemoryProp(a, "value", s);
      }
  },
  onNavigatorUnselect: (e, n) => {
    var o;
    for (const t of n.instancePath)
      if (t.component === `${r}:TabsContent` || t.component === `${r}:TabsTrigger`) {
        const a = l(
          n.instancePath,
          t,
          `${r}:Tabs`
        ), s = e.getPropValue(t, "value") ?? ((o = e.indexesWithinAncestors.get(t.id)) == null ? void 0 : o.toString());
        a && s && e.setMemoryProp(a, "value", void 0);
      }
  }
};
export {
  k as Tabs,
  A as TabsContent,
  w as TabsList,
  y as TabsTrigger,
  R as hooksTabs
};
