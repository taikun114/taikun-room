import { jsx as d } from "react/jsx-runtime";
import { forwardRef as m, useState as u, useEffect as f } from "react";
import { Header as l, Trigger as g, Content as A, Root as p, Item as h } from "@radix-ui/react-accordion";
import { getIndexWithinAncestorFromProps as P } from "@webstudio-is/sdk/runtime";
import { getClosestInstance as a } from "@webstudio-is/react-sdk/runtime";
const S = m(({ defaultValue: e, ...o }, n) => {
  const t = o.value ?? e ?? "", [r, c] = u(t);
  return f(() => c(t), [t]), /* @__PURE__ */ d(
    p,
    {
      ...o,
      ref: n,
      type: "single",
      value: r,
      onValueChange: c
    }
  );
}), $ = m(({ value: e, ...o }, n) => {
  const t = P(o);
  return /* @__PURE__ */ d(h, { ref: n, value: e ?? t ?? "", ...o });
}), k = l, w = g, y = A, i = "@webstudio-is/sdk-components-react-radix", H = {
  onNavigatorSelect: (e, o) => {
    var n;
    for (const t of o.instancePath)
      if (t.component === `${i}:AccordionContent`) {
        const r = a(
          o.instancePath,
          t,
          `${i}:Accordion`
        ), c = a(
          o.instancePath,
          t,
          `${i}:AccordionItem`
        );
        if (r && c) {
          const s = e.getPropValue(c, "value") ?? ((n = e.indexesWithinAncestors.get(c.id)) == null ? void 0 : n.toString());
          s && e.setMemoryProp(r, "value", s);
        }
      }
  }
};
export {
  S as Accordion,
  y as AccordionContent,
  k as AccordionHeader,
  $ as AccordionItem,
  w as AccordionTrigger,
  H as hooksAccordion
};
