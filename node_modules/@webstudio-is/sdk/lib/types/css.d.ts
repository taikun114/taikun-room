import { type StyleSheetRegular, type TransformValue } from "@webstudio-is/css-engine";
import type { Assets } from "./schema/assets";
import type { Instances } from "./schema/instances";
import type { Props } from "./schema/props";
import type { Breakpoints } from "./schema/breakpoints";
import type { Styles } from "./schema/styles";
import type { StyleSourceSelections } from "./schema/style-source-selections";
import type { WsComponentMeta } from "./schema/component-meta";
export declare const addFontRules: ({ sheet, assets, assetBaseUrl, }: {
    sheet: StyleSheetRegular;
    assets: Assets;
    assetBaseUrl: string;
}) => void;
export type CssConfig = {
    assets: Assets;
    instances: Instances;
    props: Props;
    breakpoints: Breakpoints;
    styles: Styles;
    styleSourceSelections: StyleSourceSelections;
    componentMetas: Map<string, WsComponentMeta>;
    assetBaseUrl: string;
    atomic: boolean;
};
export declare const createImageValueTransformer: (assets: Assets, { assetBaseUrl }: {
    assetBaseUrl: string;
}) => TransformValue;
export declare const generateCss: ({ assets, instances, props, breakpoints, styles, styleSourceSelections, componentMetas, assetBaseUrl, atomic, }: CssConfig) => {
    cssText: string;
    classes: Map<string, string[]>;
};
