import {
  a
} from "./chunk-T4WZM3U3.js";
import "./chunk-HQO5VOYS.js";
import {
  ReactSdkContext
} from "./chunk-6K2TQTTY.js";
import {
  formBotFieldName,
  formIdFieldName
} from "./chunk-XSYKZMLR.js";
import {
  require_jsx_runtime
} from "./chunk-A7TAK4KR.js";
import "./chunk-R5AY5DVU.js";
import "./chunk-LCVBOX6C.js";
import {
  Form,
  NavLink,
  Scripts,
  ScrollRestoration,
  useFetcher
} from "./chunk-TVU2D7RQ.js";
import {
  require_react
} from "./chunk-OXMAUKK4.js";
import {
  __toESM
} from "./chunk-DC5AMYBS.js";

// node_modules/@webstudio-is/sdk-components-react-router/lib/body.js
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var import_react = __toESM(require_react(), 1);
var e = (0, import_react.forwardRef)(
  ({ children: r, ...t }, i) => (0, import_jsx_runtime.jsxs)("body", { ...t, ref: i, children: [
    r,
    (0, import_jsx_runtime.jsx)(Scripts, {}),
    (0, import_jsx_runtime.jsx)(ScrollRestoration, {})
  ] })
);
e.displayName = "Body";

// node_modules/@webstudio-is/sdk-components-react-router/lib/link.js
var import_jsx_runtime2 = __toESM(require_jsx_runtime(), 1);
var import_react2 = __toESM(require_react(), 1);
var l = (0, import_react2.forwardRef)((r, e2) => {
  const { assetBaseUrl: a2 } = (0, import_react2.useContext)(ReactSdkContext), t = String(r.href ?? "");
  if (
    // remix appends ?index in runtime but not in ssr
    t === "" || t.startsWith("?") || t.startsWith("/") && t.startsWith(a2) === false
  )
    return (0, import_jsx_runtime2.jsx)(NavLink, { ...r, to: t, ref: e2, end: true });
  const { prefetch: p3, reloadDocument: d, replace: h2, preventScrollReset: k, ...i } = r;
  return (0, import_jsx_runtime2.jsx)(a, { ...i, ref: e2 });
});
l.displayName = a.displayName;

// node_modules/@webstudio-is/sdk-components-react-router/lib/webhook-form.js
var import_jsx_runtime3 = __toESM(require_jsx_runtime(), 1);
var import_react3 = __toESM(require_react(), 1);
var x = (t, e2) => {
  const c = (0, import_react3.useRef)(e2);
  c.current = e2;
  const s2 = (0, import_react3.useRef)(t);
  (0, import_react3.useEffect)(() => {
    s2.current.state !== t.state && t.state === "idle" && t.data !== void 0 && c.current(t.data), s2.current = t;
  }, [t]);
};
var p = (t, e2) => e2 === 0 ? t : p(e2, t % e2);
var R = (t, e2) => {
  const c = p(t, e2);
  return `${t / c}/${e2 / c}`;
};
var $ = () => {
  if (typeof matchMedia > "u")
    return true;
  const { width: t, height: e2 } = screen, c = R(t, e2), s2 = matchMedia(
    `(device-aspect-ratio: ${c})`
  ).matches, o4 = matchMedia(
    `(device-width: ${t}px) and (device-height: ${e2}px)`
  ).matches, a2 = matchMedia(
    `(device-width: ${t - 1}px) and (device-height: ${e2}px)`
  ).matches, n2 = matchMedia("(prefers-color-scheme: light)").matches, d = matchMedia("(prefers-color-scheme: dark)").matches;
  return (s2 && o4 && !a2 && n2 !== d) === false;
};
var A = (0, import_react3.forwardRef)(
  ({ children: t, action: e2, method: c, state: s2 = "initial", onStateChange: o4, ...a2 }, n2) => {
    const d = useFetcher();
    x(d, (r) => {
      const i = (r == null ? void 0 : r.success) === true ? "success" : "error";
      o4 == null || o4(i);
    });
    const m3 = (r) => {
      const i = document.createElement("input");
      i.type = "hidden", i.name = formBotFieldName, i.value = $() ? "jsdom" : Date.now().toString(16), r.currentTarget.appendChild(i);
    };
    return (0, import_jsx_runtime3.jsxs)(
      d.Form,
      {
        ...a2,
        method: "post",
        "data-state": s2,
        ref: n2,
        onSubmit: m3,
        children: [
          (0, import_jsx_runtime3.jsx)(
            "input",
            {
              type: "hidden",
              name: formIdFieldName,
              value: e2 == null ? void 0 : e2.toString()
            }
          ),
          t
        ]
      }
    );
  }
);
A.displayName = "WebhookForm";

// node_modules/@webstudio-is/sdk-components-react-router/lib/remix-form.js
var import_jsx_runtime4 = __toESM(require_jsx_runtime(), 1);
var import_react4 = __toESM(require_react(), 1);
var p2 = (0, import_react4.forwardRef)(({ action: r, ...m3 }, e2) => r === void 0 || r === "" || typeof r == "string" && (r != null && r.startsWith("/")) ? (0, import_jsx_runtime4.jsx)(
  Form,
  {
    action: r,
    ...m3,
    ref: e2,
    preventScrollReset: r === void 0 || r === ""
  }
) : (0, import_jsx_runtime4.jsx)("form", { ...m3, ref: e2 }));
p2.displayName = "Form";
export {
  e as Body,
  A as Form,
  l as Link,
  p2 as RemixForm,
  l as RichTextLink
};
//# sourceMappingURL=@webstudio-is_sdk-components-react-router.js.map
