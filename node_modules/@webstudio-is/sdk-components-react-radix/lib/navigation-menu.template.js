import { jsxs as s, jsx as e } from "react/jsx-runtime";
import { ChevronDownIcon as w } from "@webstudio-is/icons/svg";
import { css as t, $ as n, PlaceholderValue as l } from "@webstudio-is/template";
import { radix as r } from "./shared/proxy.js";
import { getButtonStyle as u } from "./shared/styles.js";
import { spacing as i, borderRadius as h, borderWidth as v, colors as a, boxShadow as b, height as y, width as p, transition as x, fontSize as m, weights as $, lineHeight as c } from "./shared/theme.js";
const k = [
  {
    title: "Sheet",
    href: "/docs/components/sheet",
    description: "Extends the Dialog component to display content that complements the main content of the screen."
  },
  {
    title: "Navigation Menu",
    href: "/docs/components/navigation-menu",
    description: "A collection of links for navigating websites."
  },
  {
    title: "Tabs",
    href: "/docs/components/tabs",
    description: "A set of layered sections of content—known as tab panels—that are displayed one at a time."
  },
  {
    title: "Accordion",
    href: "/docs/components/accordion",
    description: "A vertically stacked set of interactive headings that each reveal a section of content."
  },
  {
    title: "Dialog",
    href: "/docs/components/dialog",
    description: "A window overlaid on either the primary window or another dialog window, rendering the content underneath inert."
  },
  {
    title: "Collapsible",
    href: "/docs/components/collapsible",
    description: "An interactive component which expands/collapses a panel."
  },
  {
    title: "Popover",
    href: "/docs/components/popover",
    description: "Displays rich content in a portal, triggered by a button."
  },
  {
    title: "Tooltip",
    href: "/docs/components/tooltip",
    description: "A popup that displays information related to an element when the element receives keyboard focus or the mouse hovers over it."
  },
  {
    title: "Button",
    href: "/docs/components/button",
    description: "Displays a button or a component that looks like a button."
  }
], M = (o) => /* @__PURE__ */ e(r.NavigationMenuLink, { children: /* @__PURE__ */ s(
  n.Link,
  {
    href: `https://ui.shadcn.com${o.href}`,
    "ws:style": t`
        color: inherit;
        display: flex;
        flex-direction: column;
        user-select: none;
        gap: ${i[1]};
        border-radius: ${h.md};
        padding: ${i[3]};
        line-height: ${c.none};
        text-decoration-line: none;
        outline: none;
        &:hover,
        &:focus {
          background-color: ${a.accent};
          color: ${a.accentForeground};
        }
      `,
    children: [
      /* @__PURE__ */ e(
        n.Text,
        {
          "ws:style": t`
          font-size: ${m.sm};
          font-weight: ${$.medium};
          line-height: ${c.none};
        `,
          children: new l(o.title)
        }
      ),
      /* @__PURE__ */ e(
        n.Paragraph,
        {
          "ws:style": t`
          margin: 0;
          overflow: hidden;
          display: -webkit-box;
          -webkit-box-orient: vertical;
          -webkit-line-clamp: 2;
          font-size: ${m.sm};
          line-height: ${c.snug};
          color: ${a.mutedForeground};
        `,
          children: new l(o.description)
        }
      )
    ]
  }
) }, o.title), d = (o) => /* @__PURE__ */ e(
  n.Box,
  {
    "ws:label": "Flex Column",
    "ws:style": t`
      width: ${p[64]};
      display: flex;
      gap: ${i[4]};
      flex-direction: column;
    `,
    children: k.slice(o.offset, o.offset + o.count).map(M)
  }
), C = /* @__PURE__ */ s(
  n.Box,
  {
    "ws:label": "Content",
    "ws:style": t`
      display: flex;
      gap: ${i[4]};
      padding: ${i[2]};
    `,
    children: [
      /* @__PURE__ */ e(
        n.Box,
        {
          "ws:style": t`
        background-color: ${a.border};
        padding: ${i[4]};
        width: ${p[48]};
        border-radius: ${h.md};
      `,
          children: new l("")
        }
      ),
      d({ count: 3, offset: 0 })
    ]
  }
), A = /* @__PURE__ */ s(
  n.Box,
  {
    "ws:label": "Content",
    "ws:style": t`
      display: flex;
      gap: ${i[4]};
    `,
    children: [
      d({ count: 3, offset: 3 }),
      d({ count: 3, offset: 6 })
    ]
  }
), g = (o, f) => /* @__PURE__ */ s(r.NavigationMenuItem, { children: [
  /* @__PURE__ */ e(r.NavigationMenuTrigger, { children: /* @__PURE__ */ s(
    n.Button,
    {
      "ws:style": [
        ...u("ghost", "sm"),
        ...t`
              --navigation-menu-trigger-icon-transform: 0deg;
              &[data-state="open"] {
                --navigation-menu-trigger-icon-transform: 180deg;
              }
            `
      ],
      children: [
        /* @__PURE__ */ e(n.Text, { children: new l(o) }),
        /* @__PURE__ */ e(
          n.Box,
          {
            "ws:label": "Icon Container",
            "ws:style": t`
              margin-left: ${i[1]};
              rotate: var(--navigation-menu-trigger-icon-transform);
              height: ${y[4]};
              width: ${p[4]};
              flex-shrink: 0;
              transition: ${x.all};
              transition-duration: 200ms;
            `,
            children: /* @__PURE__ */ e(n.HtmlEmbed, { "ws:label": "Chevron Icon", code: w })
          }
        )
      ]
    }
  ) }),
  /* @__PURE__ */ e(
    r.NavigationMenuContent,
    {
      "ws:style": t`
          left: 0;
          top: 0;
          positon: absolute;
          width: max-content;
          padding: ${i[4]};
        `,
      children: f
    }
  )
] }), N = (o) => /* @__PURE__ */ e(r.NavigationMenuItem, { children: /* @__PURE__ */ e(r.NavigationMenuLink, { children: /* @__PURE__ */ e(
  n.Link,
  {
    "ws:style": [
      ...u("ghost", "sm"),
      ...t`
              text-decoration-line: none;
              color: currentColor;
            `
    ],
    children: new l(o)
  }
) }) }), S = {
  category: "radix",
  description: "A collection of links for navigating websites.",
  order: 2,
  template: /* @__PURE__ */ s(
    r.NavigationMenu,
    {
      "ws:style": t`
        position: relative;
        max-width: max-content;
      `,
      children: [
        /* @__PURE__ */ s(
          r.NavigationMenuList,
          {
            "ws:style": t`
          /* ul defaults in tailwind */
          padding: 0;
          margin: 0;
          /* shadcdn styles */
          display: flex;
          flex: 1 1 0;
          list-style-type: none;
          align-items: center;
          justify-content: center;
          gap: ${i[1]};
        `,
            children: [
              g("About", C),
              g("Components", A),
              N("Standalone")
            ]
          }
        ),
        /* @__PURE__ */ e(
          n.Box,
          {
            "ws:label": "Viewport Container",
            "ws:style": t`
          position: absolute;
          left: 0;
          top: 100%;
          display: flex;
          justify-content: center;
        `,
            children: /* @__PURE__ */ e(
              r.NavigationMenuViewport,
              {
                "ws:style": t`
            position: relative;
            margin-top: ${i[1.5]};
            overflow: hidden;
            border-radius: ${h.md};
            border: ${v.DEFAULT} solid ${a.border};
            background-color: ${a.popover};
            color: ${a.popoverForeground};
            box-shadow: ${b.lg};
            height: var(--radix-navigation-menu-viewport-height);
            width: var(--radix-navigation-menu-viewport-width);
          `
              }
            )
          }
        )
      ]
    }
  )
};
export {
  S as meta
};
