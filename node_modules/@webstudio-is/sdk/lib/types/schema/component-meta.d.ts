import { z } from "zod";
import type { HtmlTags } from "html-tags";
import type { Simplify } from "type-fest";
import { StyleValue, type CssProperty } from "@webstudio-is/css-engine";
export declare const PresetStyleDecl: z.ZodObject<{
    state: z.ZodOptional<z.ZodString>;
    property: z.ZodString;
    value: z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"image">;
        value: z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"asset">;
            value: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            value: string;
            type: "asset";
        }, {
            value: string;
            type: "asset";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"url">;
            url: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            type: "url";
            url: string;
        }, {
            type: "url";
            url: string;
        }>]>;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        value: {
            value: string;
            type: "asset";
        } | {
            type: "url";
            url: string;
        };
        type: "image";
        hidden?: boolean | undefined;
    }, {
        value: {
            value: string;
            type: "asset";
        } | {
            type: "url";
            url: string;
        };
        type: "image";
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"layers">;
        value: z.ZodArray<z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"unit">;
            unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
            value: z.ZodNumber;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        }, {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"keyword">;
            value: z.ZodString;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: string;
            type: "keyword";
            hidden?: boolean | undefined;
        }, {
            value: string;
            type: "keyword";
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"unparsed">;
            value: z.ZodString;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: string;
            type: "unparsed";
            hidden?: boolean | undefined;
        }, {
            value: string;
            type: "unparsed";
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"image">;
            value: z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"asset">;
                value: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "asset";
            }, {
                value: string;
                type: "asset";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"url">;
                url: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                type: "url";
                url: string;
            }, {
                type: "url";
                url: string;
            }>]>;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: {
                value: string;
                type: "asset";
            } | {
                type: "url";
                url: string;
            };
            type: "image";
            hidden?: boolean | undefined;
        }, {
            value: {
                value: string;
                type: "asset";
            } | {
                type: "url";
                url: string;
            };
            type: "image";
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"tuple">;
            value: z.ZodArray<z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"unit">;
                unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                value: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"keyword">;
                value: z.ZodString;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unparsed">;
                value: z.ZodString;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"image">;
                value: z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"asset">;
                    value: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "asset";
                }, {
                    value: string;
                    type: "asset";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"url">;
                    url: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    type: "url";
                    url: string;
                }, {
                    type: "url";
                    url: string;
                }>]>;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: {
                    value: string;
                    type: "asset";
                } | {
                    type: "url";
                    url: string;
                };
                type: "image";
                hidden?: boolean | undefined;
            }, {
                value: {
                    value: string;
                    type: "asset";
                } | {
                    type: "url";
                    url: string;
                };
                type: "image";
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"rgb">;
                r: z.ZodNumber;
                g: z.ZodNumber;
                b: z.ZodNumber;
                alpha: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            }, {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            }>, z.ZodType<{
                type: "function";
                name: string;
                args: StyleValue;
                hidden?: boolean;
            }, z.ZodTypeDef, {
                type: "function";
                name: string;
                args: StyleValue;
                hidden?: boolean;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"var">;
                value: z.ZodString;
                fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"unparsed">;
                    value: z.ZodString;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                }, {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"keyword">;
                    value: z.ZodString;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                }, {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"unit">;
                    unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                    value: z.ZodNumber;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"rgb">;
                    r: z.ZodNumber;
                    g: z.ZodNumber;
                    b: z.ZodNumber;
                    alpha: z.ZodNumber;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                }, {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                }>]>>;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            }>]>, "many">;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: ({
                value: {
                    value: string;
                    type: "asset";
                } | {
                    type: "url";
                    url: string;
                };
                type: "image";
                hidden?: boolean | undefined;
            } | {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                type: "function";
                name: string;
                args: StyleValue;
                hidden?: boolean;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            })[];
            type: "tuple";
            hidden?: boolean | undefined;
        }, {
            value: ({
                value: {
                    value: string;
                    type: "asset";
                } | {
                    type: "url";
                    url: string;
                };
                type: "image";
                hidden?: boolean | undefined;
            } | {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                type: "function";
                name: string;
                args: StyleValue;
                hidden?: boolean;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            })[];
            type: "tuple";
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"shadow">;
            hidden: z.ZodOptional<z.ZodBoolean>;
            position: z.ZodUnion<[z.ZodLiteral<"inset">, z.ZodLiteral<"outset">]>;
            offsetX: z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"unit">;
                unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                value: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"var">;
                value: z.ZodString;
                fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"unparsed">;
                    value: z.ZodString;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                }, {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"keyword">;
                    value: z.ZodString;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                }, {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"unit">;
                    unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                    value: z.ZodNumber;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"rgb">;
                    r: z.ZodNumber;
                    g: z.ZodNumber;
                    b: z.ZodNumber;
                    alpha: z.ZodNumber;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                }, {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                }>]>>;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            }>]>;
            offsetY: z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"unit">;
                unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                value: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"var">;
                value: z.ZodString;
                fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"unparsed">;
                    value: z.ZodString;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                }, {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"keyword">;
                    value: z.ZodString;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                }, {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"unit">;
                    unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                    value: z.ZodNumber;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"rgb">;
                    r: z.ZodNumber;
                    g: z.ZodNumber;
                    b: z.ZodNumber;
                    alpha: z.ZodNumber;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                }, {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                }>]>>;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            }>]>;
            blur: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"unit">;
                unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                value: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"var">;
                value: z.ZodString;
                fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"unparsed">;
                    value: z.ZodString;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                }, {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"keyword">;
                    value: z.ZodString;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                }, {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"unit">;
                    unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                    value: z.ZodNumber;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"rgb">;
                    r: z.ZodNumber;
                    g: z.ZodNumber;
                    b: z.ZodNumber;
                    alpha: z.ZodNumber;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                }, {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                }>]>>;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            }>]>>;
            spread: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"unit">;
                unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                value: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"var">;
                value: z.ZodString;
                fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"unparsed">;
                    value: z.ZodString;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                }, {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"keyword">;
                    value: z.ZodString;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                }, {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"unit">;
                    unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                    value: z.ZodNumber;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"rgb">;
                    r: z.ZodNumber;
                    g: z.ZodNumber;
                    b: z.ZodNumber;
                    alpha: z.ZodNumber;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                }, {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                }>]>>;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            }>]>>;
            color: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"rgb">;
                r: z.ZodNumber;
                g: z.ZodNumber;
                b: z.ZodNumber;
                alpha: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            }, {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"keyword">;
                value: z.ZodString;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"var">;
                value: z.ZodString;
                fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"unparsed">;
                    value: z.ZodString;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                }, {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"keyword">;
                    value: z.ZodString;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                }, {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"unit">;
                    unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                    value: z.ZodNumber;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"rgb">;
                    r: z.ZodNumber;
                    g: z.ZodNumber;
                    b: z.ZodNumber;
                    alpha: z.ZodNumber;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                }, {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                }>]>>;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            }>]>>;
        }, "strip", z.ZodTypeAny, {
            position: "inset" | "outset";
            type: "shadow";
            offsetX: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            };
            offsetY: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            };
            color?: {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
            blur?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
            spread?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
        }, {
            position: "inset" | "outset";
            type: "shadow";
            offsetX: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            };
            offsetY: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            };
            color?: {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
            blur?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
            spread?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"rgb">;
            r: z.ZodNumber;
            g: z.ZodNumber;
            b: z.ZodNumber;
            alpha: z.ZodNumber;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        }, {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"invalid">;
            value: z.ZodString;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: string;
            type: "invalid";
            hidden?: boolean | undefined;
        }, {
            value: string;
            type: "invalid";
            hidden?: boolean | undefined;
        }>, z.ZodType<{
            type: "function";
            name: string;
            args: StyleValue;
            hidden?: boolean;
        }, z.ZodTypeDef, {
            type: "function";
            name: string;
            args: StyleValue;
            hidden?: boolean;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"var">;
            value: z.ZodString;
            fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"unparsed">;
                value: z.ZodString;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"keyword">;
                value: z.ZodString;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unit">;
                unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                value: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"rgb">;
                r: z.ZodNumber;
                g: z.ZodNumber;
                b: z.ZodNumber;
                alpha: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            }, {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            }>]>>;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        }, {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        }>]>, "many">;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        value: ({
            value: {
                value: string;
                type: "asset";
            } | {
                type: "url";
                url: string;
            };
            type: "image";
            hidden?: boolean | undefined;
        } | {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "keyword";
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "unparsed";
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | {
            type: "function";
            name: string;
            args: StyleValue;
            hidden?: boolean;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        } | {
            value: ({
                value: {
                    value: string;
                    type: "asset";
                } | {
                    type: "url";
                    url: string;
                };
                type: "image";
                hidden?: boolean | undefined;
            } | {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                type: "function";
                name: string;
                args: StyleValue;
                hidden?: boolean;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            })[];
            type: "tuple";
            hidden?: boolean | undefined;
        } | {
            position: "inset" | "outset";
            type: "shadow";
            offsetX: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            };
            offsetY: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            };
            color?: {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
            blur?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
            spread?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
        } | {
            value: string;
            type: "invalid";
            hidden?: boolean | undefined;
        })[];
        type: "layers";
        hidden?: boolean | undefined;
    }, {
        value: ({
            value: {
                value: string;
                type: "asset";
            } | {
                type: "url";
                url: string;
            };
            type: "image";
            hidden?: boolean | undefined;
        } | {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "keyword";
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "unparsed";
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | {
            type: "function";
            name: string;
            args: StyleValue;
            hidden?: boolean;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        } | {
            value: ({
                value: {
                    value: string;
                    type: "asset";
                } | {
                    type: "url";
                    url: string;
                };
                type: "image";
                hidden?: boolean | undefined;
            } | {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                type: "function";
                name: string;
                args: StyleValue;
                hidden?: boolean;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            })[];
            type: "tuple";
            hidden?: boolean | undefined;
        } | {
            position: "inset" | "outset";
            type: "shadow";
            offsetX: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            };
            offsetY: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            };
            color?: {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
            blur?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
            spread?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
        } | {
            value: string;
            type: "invalid";
            hidden?: boolean | undefined;
        })[];
        type: "layers";
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"unit">;
        unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
        value: z.ZodNumber;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        value: number;
        type: "unit";
        unit: "number" | import("@webstudio-is/css-engine").__Unit;
        hidden?: boolean | undefined;
    }, {
        value: number;
        type: "unit";
        unit: "number" | import("@webstudio-is/css-engine").__Unit;
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"keyword">;
        value: z.ZodString;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        value: string;
        type: "keyword";
        hidden?: boolean | undefined;
    }, {
        value: string;
        type: "keyword";
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"fontFamily">;
        value: z.ZodArray<z.ZodString, "many">;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        value: string[];
        type: "fontFamily";
        hidden?: boolean | undefined;
    }, {
        value: string[];
        type: "fontFamily";
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"rgb">;
        r: z.ZodNumber;
        g: z.ZodNumber;
        b: z.ZodNumber;
        alpha: z.ZodNumber;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    }, {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"unparsed">;
        value: z.ZodString;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        value: string;
        type: "unparsed";
        hidden?: boolean | undefined;
    }, {
        value: string;
        type: "unparsed";
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"tuple">;
        value: z.ZodArray<z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"unit">;
            unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
            value: z.ZodNumber;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        }, {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"keyword">;
            value: z.ZodString;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: string;
            type: "keyword";
            hidden?: boolean | undefined;
        }, {
            value: string;
            type: "keyword";
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"unparsed">;
            value: z.ZodString;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: string;
            type: "unparsed";
            hidden?: boolean | undefined;
        }, {
            value: string;
            type: "unparsed";
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"image">;
            value: z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"asset">;
                value: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "asset";
            }, {
                value: string;
                type: "asset";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"url">;
                url: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                type: "url";
                url: string;
            }, {
                type: "url";
                url: string;
            }>]>;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: {
                value: string;
                type: "asset";
            } | {
                type: "url";
                url: string;
            };
            type: "image";
            hidden?: boolean | undefined;
        }, {
            value: {
                value: string;
                type: "asset";
            } | {
                type: "url";
                url: string;
            };
            type: "image";
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"rgb">;
            r: z.ZodNumber;
            g: z.ZodNumber;
            b: z.ZodNumber;
            alpha: z.ZodNumber;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        }, {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        }>, z.ZodType<{
            type: "function";
            name: string;
            args: StyleValue;
            hidden?: boolean;
        }, z.ZodTypeDef, {
            type: "function";
            name: string;
            args: StyleValue;
            hidden?: boolean;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"var">;
            value: z.ZodString;
            fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"unparsed">;
                value: z.ZodString;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"keyword">;
                value: z.ZodString;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unit">;
                unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                value: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"rgb">;
                r: z.ZodNumber;
                g: z.ZodNumber;
                b: z.ZodNumber;
                alpha: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            }, {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            }>]>>;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        }, {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        }>]>, "many">;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        value: ({
            value: {
                value: string;
                type: "asset";
            } | {
                type: "url";
                url: string;
            };
            type: "image";
            hidden?: boolean | undefined;
        } | {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "keyword";
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "unparsed";
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | {
            type: "function";
            name: string;
            args: StyleValue;
            hidden?: boolean;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        })[];
        type: "tuple";
        hidden?: boolean | undefined;
    }, {
        value: ({
            value: {
                value: string;
                type: "asset";
            } | {
                type: "url";
                url: string;
            };
            type: "image";
            hidden?: boolean | undefined;
        } | {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "keyword";
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "unparsed";
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | {
            type: "function";
            name: string;
            args: StyleValue;
            hidden?: boolean;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        })[];
        type: "tuple";
        hidden?: boolean | undefined;
    }>, z.ZodType<{
        type: "function";
        name: string;
        args: StyleValue;
        hidden?: boolean;
    }, z.ZodTypeDef, {
        type: "function";
        name: string;
        args: StyleValue;
        hidden?: boolean;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"guaranteedInvalid">;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "guaranteedInvalid";
        hidden?: boolean | undefined;
    }, {
        type: "guaranteedInvalid";
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"invalid">;
        value: z.ZodString;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        value: string;
        type: "invalid";
        hidden?: boolean | undefined;
    }, {
        value: string;
        type: "invalid";
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"unset">;
        value: z.ZodLiteral<"">;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        value: "";
        type: "unset";
        hidden?: boolean | undefined;
    }, {
        value: "";
        type: "unset";
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"var">;
        value: z.ZodString;
        fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"unparsed">;
            value: z.ZodString;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: string;
            type: "unparsed";
            hidden?: boolean | undefined;
        }, {
            value: string;
            type: "unparsed";
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"keyword">;
            value: z.ZodString;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: string;
            type: "keyword";
            hidden?: boolean | undefined;
        }, {
            value: string;
            type: "keyword";
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"unit">;
            unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
            value: z.ZodNumber;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        }, {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"rgb">;
            r: z.ZodNumber;
            g: z.ZodNumber;
            b: z.ZodNumber;
            alpha: z.ZodNumber;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        }, {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        }>]>>;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        value: string;
        type: "var";
        fallback?: {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "keyword";
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "unparsed";
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | undefined;
        hidden?: boolean | undefined;
    }, {
        value: string;
        type: "var";
        fallback?: {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "keyword";
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "unparsed";
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | undefined;
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"shadow">;
        hidden: z.ZodOptional<z.ZodBoolean>;
        position: z.ZodUnion<[z.ZodLiteral<"inset">, z.ZodLiteral<"outset">]>;
        offsetX: z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"unit">;
            unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
            value: z.ZodNumber;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        }, {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"var">;
            value: z.ZodString;
            fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"unparsed">;
                value: z.ZodString;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"keyword">;
                value: z.ZodString;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unit">;
                unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                value: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"rgb">;
                r: z.ZodNumber;
                g: z.ZodNumber;
                b: z.ZodNumber;
                alpha: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            }, {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            }>]>>;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        }, {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        }>]>;
        offsetY: z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"unit">;
            unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
            value: z.ZodNumber;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        }, {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"var">;
            value: z.ZodString;
            fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"unparsed">;
                value: z.ZodString;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"keyword">;
                value: z.ZodString;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unit">;
                unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                value: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"rgb">;
                r: z.ZodNumber;
                g: z.ZodNumber;
                b: z.ZodNumber;
                alpha: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            }, {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            }>]>>;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        }, {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        }>]>;
        blur: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"unit">;
            unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
            value: z.ZodNumber;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        }, {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"var">;
            value: z.ZodString;
            fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"unparsed">;
                value: z.ZodString;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"keyword">;
                value: z.ZodString;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unit">;
                unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                value: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"rgb">;
                r: z.ZodNumber;
                g: z.ZodNumber;
                b: z.ZodNumber;
                alpha: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            }, {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            }>]>>;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        }, {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        }>]>>;
        spread: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"unit">;
            unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
            value: z.ZodNumber;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        }, {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"var">;
            value: z.ZodString;
            fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"unparsed">;
                value: z.ZodString;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"keyword">;
                value: z.ZodString;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unit">;
                unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                value: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"rgb">;
                r: z.ZodNumber;
                g: z.ZodNumber;
                b: z.ZodNumber;
                alpha: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            }, {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            }>]>>;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        }, {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        }>]>>;
        color: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"rgb">;
            r: z.ZodNumber;
            g: z.ZodNumber;
            b: z.ZodNumber;
            alpha: z.ZodNumber;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        }, {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"keyword">;
            value: z.ZodString;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: string;
            type: "keyword";
            hidden?: boolean | undefined;
        }, {
            value: string;
            type: "keyword";
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"var">;
            value: z.ZodString;
            fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"unparsed">;
                value: z.ZodString;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"keyword">;
                value: z.ZodString;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unit">;
                unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                value: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"rgb">;
                r: z.ZodNumber;
                g: z.ZodNumber;
                b: z.ZodNumber;
                alpha: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            }, {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            }>]>>;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        }, {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        }>]>>;
    }, "strip", z.ZodTypeAny, {
        position: "inset" | "outset";
        type: "shadow";
        offsetX: {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        };
        offsetY: {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        };
        color?: {
            value: string;
            type: "keyword";
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        } | undefined;
        hidden?: boolean | undefined;
        blur?: {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        } | undefined;
        spread?: {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        } | undefined;
    }, {
        position: "inset" | "outset";
        type: "shadow";
        offsetX: {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        };
        offsetY: {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        };
        color?: {
            value: string;
            type: "keyword";
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        } | undefined;
        hidden?: boolean | undefined;
        blur?: {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        } | undefined;
        spread?: {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        } | undefined;
    }>]>;
}, "strip", z.ZodTypeAny, {
    value: {
        value: {
            value: string;
            type: "asset";
        } | {
            type: "url";
            url: string;
        };
        type: "image";
        hidden?: boolean | undefined;
    } | {
        value: number;
        type: "unit";
        unit: "number" | import("@webstudio-is/css-engine").__Unit;
        hidden?: boolean | undefined;
    } | {
        value: string;
        type: "keyword";
        hidden?: boolean | undefined;
    } | {
        value: string;
        type: "unparsed";
        hidden?: boolean | undefined;
    } | {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    } | {
        type: "function";
        name: string;
        args: StyleValue;
        hidden?: boolean;
    } | {
        value: string;
        type: "var";
        fallback?: {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "keyword";
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "unparsed";
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | undefined;
        hidden?: boolean | undefined;
    } | {
        value: ({
            value: {
                value: string;
                type: "asset";
            } | {
                type: "url";
                url: string;
            };
            type: "image";
            hidden?: boolean | undefined;
        } | {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "keyword";
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "unparsed";
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | {
            type: "function";
            name: string;
            args: StyleValue;
            hidden?: boolean;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        })[];
        type: "tuple";
        hidden?: boolean | undefined;
    } | {
        position: "inset" | "outset";
        type: "shadow";
        offsetX: {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        };
        offsetY: {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        };
        color?: {
            value: string;
            type: "keyword";
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        } | undefined;
        hidden?: boolean | undefined;
        blur?: {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        } | undefined;
        spread?: {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        } | undefined;
    } | {
        value: string;
        type: "invalid";
        hidden?: boolean | undefined;
    } | {
        value: ({
            value: {
                value: string;
                type: "asset";
            } | {
                type: "url";
                url: string;
            };
            type: "image";
            hidden?: boolean | undefined;
        } | {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "keyword";
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "unparsed";
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | {
            type: "function";
            name: string;
            args: StyleValue;
            hidden?: boolean;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        } | {
            value: ({
                value: {
                    value: string;
                    type: "asset";
                } | {
                    type: "url";
                    url: string;
                };
                type: "image";
                hidden?: boolean | undefined;
            } | {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                type: "function";
                name: string;
                args: StyleValue;
                hidden?: boolean;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            })[];
            type: "tuple";
            hidden?: boolean | undefined;
        } | {
            position: "inset" | "outset";
            type: "shadow";
            offsetX: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            };
            offsetY: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            };
            color?: {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
            blur?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
            spread?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
        } | {
            value: string;
            type: "invalid";
            hidden?: boolean | undefined;
        })[];
        type: "layers";
        hidden?: boolean | undefined;
    } | {
        value: string[];
        type: "fontFamily";
        hidden?: boolean | undefined;
    } | {
        type: "guaranteedInvalid";
        hidden?: boolean | undefined;
    } | {
        value: "";
        type: "unset";
        hidden?: boolean | undefined;
    };
    property: string;
    state?: string | undefined;
}, {
    value: {
        value: {
            value: string;
            type: "asset";
        } | {
            type: "url";
            url: string;
        };
        type: "image";
        hidden?: boolean | undefined;
    } | {
        value: number;
        type: "unit";
        unit: "number" | import("@webstudio-is/css-engine").__Unit;
        hidden?: boolean | undefined;
    } | {
        value: string;
        type: "keyword";
        hidden?: boolean | undefined;
    } | {
        value: string;
        type: "unparsed";
        hidden?: boolean | undefined;
    } | {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    } | {
        type: "function";
        name: string;
        args: StyleValue;
        hidden?: boolean;
    } | {
        value: string;
        type: "var";
        fallback?: {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "keyword";
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "unparsed";
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | undefined;
        hidden?: boolean | undefined;
    } | {
        value: ({
            value: {
                value: string;
                type: "asset";
            } | {
                type: "url";
                url: string;
            };
            type: "image";
            hidden?: boolean | undefined;
        } | {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "keyword";
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "unparsed";
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | {
            type: "function";
            name: string;
            args: StyleValue;
            hidden?: boolean;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        })[];
        type: "tuple";
        hidden?: boolean | undefined;
    } | {
        position: "inset" | "outset";
        type: "shadow";
        offsetX: {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        };
        offsetY: {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        };
        color?: {
            value: string;
            type: "keyword";
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        } | undefined;
        hidden?: boolean | undefined;
        blur?: {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        } | undefined;
        spread?: {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        } | undefined;
    } | {
        value: string;
        type: "invalid";
        hidden?: boolean | undefined;
    } | {
        value: ({
            value: {
                value: string;
                type: "asset";
            } | {
                type: "url";
                url: string;
            };
            type: "image";
            hidden?: boolean | undefined;
        } | {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "keyword";
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "unparsed";
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | {
            type: "function";
            name: string;
            args: StyleValue;
            hidden?: boolean;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        } | {
            value: ({
                value: {
                    value: string;
                    type: "asset";
                } | {
                    type: "url";
                    url: string;
                };
                type: "image";
                hidden?: boolean | undefined;
            } | {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                type: "function";
                name: string;
                args: StyleValue;
                hidden?: boolean;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            })[];
            type: "tuple";
            hidden?: boolean | undefined;
        } | {
            position: "inset" | "outset";
            type: "shadow";
            offsetX: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            };
            offsetY: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            };
            color?: {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
            blur?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
            spread?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
        } | {
            value: string;
            type: "invalid";
            hidden?: boolean | undefined;
        })[];
        type: "layers";
        hidden?: boolean | undefined;
    } | {
        value: string[];
        type: "fontFamily";
        hidden?: boolean | undefined;
    } | {
        type: "guaranteedInvalid";
        hidden?: boolean | undefined;
    } | {
        value: "";
        type: "unset";
        hidden?: boolean | undefined;
    };
    property: string;
    state?: string | undefined;
}>;
export type PresetStyleDecl = Simplify<Omit<z.infer<typeof PresetStyleDecl>, "property"> & {
    property: CssProperty;
}>;
export type PresetStyle<Tag extends HtmlTags = HtmlTags> = Partial<Record<Tag, PresetStyleDecl[]>>;
declare const WsComponentPropsMeta: z.ZodObject<{
    props: z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodObject<{
        control: z.ZodLiteral<"tag">;
        type: z.ZodLiteral<"string">;
        defaultValue: z.ZodOptional<z.ZodUndefined>;
        options: z.ZodArray<z.ZodString, "many">;
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        required: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        options: string[];
        type: "string";
        required: boolean;
        control: "tag";
        label?: string | undefined;
        defaultValue?: undefined;
        description?: string | undefined;
    }, {
        options: string[];
        type: "string";
        required: boolean;
        control: "tag";
        label?: string | undefined;
        defaultValue?: undefined;
        description?: string | undefined;
    }>, z.ZodObject<{
        control: z.ZodLiteral<"number">;
        type: z.ZodLiteral<"number">;
        defaultValue: z.ZodOptional<z.ZodNumber>;
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        required: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        type: "number";
        required: boolean;
        control: "number";
        label?: string | undefined;
        defaultValue?: number | undefined;
        description?: string | undefined;
    }, {
        type: "number";
        required: boolean;
        control: "number";
        label?: string | undefined;
        defaultValue?: number | undefined;
        description?: string | undefined;
    }>, z.ZodObject<{
        control: z.ZodLiteral<"range">;
        type: z.ZodLiteral<"number">;
        defaultValue: z.ZodOptional<z.ZodNumber>;
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        required: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        type: "number";
        required: boolean;
        control: "range";
        label?: string | undefined;
        defaultValue?: number | undefined;
        description?: string | undefined;
    }, {
        type: "number";
        required: boolean;
        control: "range";
        label?: string | undefined;
        defaultValue?: number | undefined;
        description?: string | undefined;
    }>, z.ZodObject<{
        control: z.ZodLiteral<"text">;
        type: z.ZodLiteral<"string">;
        defaultValue: z.ZodOptional<z.ZodString>;
        rows: z.ZodOptional<z.ZodNumber>;
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        required: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        type: "string";
        required: boolean;
        control: "text";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
        rows?: number | undefined;
    }, {
        type: "string";
        required: boolean;
        control: "text";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
        rows?: number | undefined;
    }>, z.ZodObject<{
        control: z.ZodLiteral<"resource">;
        type: z.ZodLiteral<"resource">;
        defaultValue: z.ZodOptional<z.ZodString>;
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        required: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        type: "resource";
        required: boolean;
        control: "resource";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    }, {
        type: "resource";
        required: boolean;
        control: "resource";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    }>, z.ZodObject<{
        control: z.ZodLiteral<"code">;
        type: z.ZodLiteral<"string">;
        language: z.ZodUnion<[z.ZodLiteral<"html">, z.ZodLiteral<"markdown">]>;
        defaultValue: z.ZodOptional<z.ZodString>;
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        required: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        type: "string";
        required: boolean;
        control: "code";
        language: "html" | "markdown";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    }, {
        type: "string";
        required: boolean;
        control: "code";
        language: "html" | "markdown";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    }>, z.ZodObject<{
        control: z.ZodLiteral<"codetext">;
        type: z.ZodLiteral<"string">;
        defaultValue: z.ZodOptional<z.ZodString>;
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        required: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        type: "string";
        required: boolean;
        control: "codetext";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    }, {
        type: "string";
        required: boolean;
        control: "codetext";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    }>, z.ZodObject<{
        control: z.ZodLiteral<"color">;
        type: z.ZodLiteral<"string">;
        defaultValue: z.ZodOptional<z.ZodString>;
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        required: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        type: "string";
        required: boolean;
        control: "color";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    }, {
        type: "string";
        required: boolean;
        control: "color";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    }>, z.ZodObject<{
        control: z.ZodLiteral<"boolean">;
        type: z.ZodLiteral<"boolean">;
        defaultValue: z.ZodOptional<z.ZodBoolean>;
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        required: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        type: "boolean";
        required: boolean;
        control: "boolean";
        label?: string | undefined;
        defaultValue?: boolean | undefined;
        description?: string | undefined;
    }, {
        type: "boolean";
        required: boolean;
        control: "boolean";
        label?: string | undefined;
        defaultValue?: boolean | undefined;
        description?: string | undefined;
    }>, z.ZodObject<{
        control: z.ZodLiteral<"radio">;
        type: z.ZodLiteral<"string">;
        defaultValue: z.ZodOptional<z.ZodString>;
        options: z.ZodArray<z.ZodString, "many">;
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        required: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        options: string[];
        type: "string";
        required: boolean;
        control: "radio";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    }, {
        options: string[];
        type: "string";
        required: boolean;
        control: "radio";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    }>, z.ZodObject<{
        control: z.ZodLiteral<"inline-radio">;
        type: z.ZodLiteral<"string">;
        defaultValue: z.ZodOptional<z.ZodString>;
        options: z.ZodArray<z.ZodString, "many">;
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        required: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        options: string[];
        type: "string";
        required: boolean;
        control: "inline-radio";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    }, {
        options: string[];
        type: "string";
        required: boolean;
        control: "inline-radio";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    }>, z.ZodObject<{
        control: z.ZodLiteral<"select">;
        type: z.ZodLiteral<"string">;
        defaultValue: z.ZodOptional<z.ZodString>;
        options: z.ZodArray<z.ZodString, "many">;
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        required: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        options: string[];
        type: "string";
        required: boolean;
        control: "select";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    }, {
        options: string[];
        type: "string";
        required: boolean;
        control: "select";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    }>, z.ZodObject<{
        control: z.ZodLiteral<"multi-select">;
        type: z.ZodLiteral<"string[]">;
        defaultValue: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        options: z.ZodArray<z.ZodString, "many">;
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        required: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        options: string[];
        type: "string[]";
        required: boolean;
        control: "multi-select";
        label?: string | undefined;
        defaultValue?: string[] | undefined;
        description?: string | undefined;
    }, {
        options: string[];
        type: "string[]";
        required: boolean;
        control: "multi-select";
        label?: string | undefined;
        defaultValue?: string[] | undefined;
        description?: string | undefined;
    }>, z.ZodObject<{
        control: z.ZodLiteral<"check">;
        type: z.ZodLiteral<"string[]">;
        defaultValue: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        options: z.ZodArray<z.ZodString, "many">;
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        required: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        options: string[];
        type: "string[]";
        required: boolean;
        control: "check";
        label?: string | undefined;
        defaultValue?: string[] | undefined;
        description?: string | undefined;
    }, {
        options: string[];
        type: "string[]";
        required: boolean;
        control: "check";
        label?: string | undefined;
        defaultValue?: string[] | undefined;
        description?: string | undefined;
    }>, z.ZodObject<{
        control: z.ZodLiteral<"inline-check">;
        type: z.ZodLiteral<"string[]">;
        defaultValue: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        options: z.ZodArray<z.ZodString, "many">;
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        required: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        options: string[];
        type: "string[]";
        required: boolean;
        control: "inline-check";
        label?: string | undefined;
        defaultValue?: string[] | undefined;
        description?: string | undefined;
    }, {
        options: string[];
        type: "string[]";
        required: boolean;
        control: "inline-check";
        label?: string | undefined;
        defaultValue?: string[] | undefined;
        description?: string | undefined;
    }>, z.ZodObject<{
        control: z.ZodLiteral<"file">;
        type: z.ZodLiteral<"string">;
        defaultValue: z.ZodOptional<z.ZodString>;
        accept: z.ZodOptional<z.ZodString>;
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        required: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        type: "string";
        required: boolean;
        control: "file";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
        accept?: string | undefined;
    }, {
        type: "string";
        required: boolean;
        control: "file";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
        accept?: string | undefined;
    }>, z.ZodObject<{
        control: z.ZodLiteral<"url">;
        type: z.ZodLiteral<"string">;
        defaultValue: z.ZodOptional<z.ZodString>;
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        required: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        type: "string";
        required: boolean;
        control: "url";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    }, {
        type: "string";
        required: boolean;
        control: "url";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    }>, z.ZodObject<{
        control: z.ZodLiteral<"json">;
        type: z.ZodLiteral<"json">;
        defaultValue: z.ZodOptional<z.ZodUnknown>;
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        required: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        type: "json";
        required: boolean;
        control: "json";
        label?: string | undefined;
        defaultValue?: unknown;
        description?: string | undefined;
    }, {
        type: "json";
        required: boolean;
        control: "json";
        label?: string | undefined;
        defaultValue?: unknown;
        description?: string | undefined;
    }>, z.ZodObject<{
        control: z.ZodLiteral<"date">;
        type: z.ZodLiteral<"string">;
        defaultValue: z.ZodOptional<z.ZodString>;
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        required: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        type: "string";
        required: boolean;
        control: "date";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    }, {
        type: "string";
        required: boolean;
        control: "date";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    }>, z.ZodObject<{
        control: z.ZodLiteral<"action">;
        type: z.ZodLiteral<"action">;
        defaultValue: z.ZodOptional<z.ZodUndefined>;
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        required: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        type: "action";
        required: boolean;
        control: "action";
        label?: string | undefined;
        defaultValue?: undefined;
        description?: string | undefined;
    }, {
        type: "action";
        required: boolean;
        control: "action";
        label?: string | undefined;
        defaultValue?: undefined;
        description?: string | undefined;
    }>, z.ZodObject<{
        control: z.ZodLiteral<"textContent">;
        type: z.ZodLiteral<"string">;
        defaultValue: z.ZodOptional<z.ZodString>;
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        required: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        type: "string";
        required: boolean;
        control: "textContent";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    }, {
        type: "string";
        required: boolean;
        control: "textContent";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    }>, z.ZodObject<{
        control: z.ZodLiteral<"animationAction">;
        type: z.ZodLiteral<"animationAction">;
        defaultValue: z.ZodOptional<z.ZodUndefined>;
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        required: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        type: "animationAction";
        required: boolean;
        control: "animationAction";
        label?: string | undefined;
        defaultValue?: undefined;
        description?: string | undefined;
    }, {
        type: "animationAction";
        required: boolean;
        control: "animationAction";
        label?: string | undefined;
        defaultValue?: undefined;
        description?: string | undefined;
    }>]>>;
    initialProps: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
}, "strip", z.ZodTypeAny, {
    props: Record<string, {
        options: string[];
        type: "string";
        required: boolean;
        control: "tag";
        label?: string | undefined;
        defaultValue?: undefined;
        description?: string | undefined;
    } | {
        type: "number";
        required: boolean;
        control: "number";
        label?: string | undefined;
        defaultValue?: number | undefined;
        description?: string | undefined;
    } | {
        type: "number";
        required: boolean;
        control: "range";
        label?: string | undefined;
        defaultValue?: number | undefined;
        description?: string | undefined;
    } | {
        type: "string";
        required: boolean;
        control: "text";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
        rows?: number | undefined;
    } | {
        type: "resource";
        required: boolean;
        control: "resource";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    } | {
        type: "string";
        required: boolean;
        control: "code";
        language: "html" | "markdown";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    } | {
        type: "string";
        required: boolean;
        control: "codetext";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    } | {
        type: "string";
        required: boolean;
        control: "color";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    } | {
        type: "boolean";
        required: boolean;
        control: "boolean";
        label?: string | undefined;
        defaultValue?: boolean | undefined;
        description?: string | undefined;
    } | {
        options: string[];
        type: "string";
        required: boolean;
        control: "radio";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    } | {
        options: string[];
        type: "string";
        required: boolean;
        control: "inline-radio";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    } | {
        options: string[];
        type: "string";
        required: boolean;
        control: "select";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    } | {
        options: string[];
        type: "string[]";
        required: boolean;
        control: "check";
        label?: string | undefined;
        defaultValue?: string[] | undefined;
        description?: string | undefined;
    } | {
        options: string[];
        type: "string[]";
        required: boolean;
        control: "inline-check";
        label?: string | undefined;
        defaultValue?: string[] | undefined;
        description?: string | undefined;
    } | {
        options: string[];
        type: "string[]";
        required: boolean;
        control: "multi-select";
        label?: string | undefined;
        defaultValue?: string[] | undefined;
        description?: string | undefined;
    } | {
        type: "string";
        required: boolean;
        control: "file";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
        accept?: string | undefined;
    } | {
        type: "string";
        required: boolean;
        control: "url";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    } | {
        type: "json";
        required: boolean;
        control: "json";
        label?: string | undefined;
        defaultValue?: unknown;
        description?: string | undefined;
    } | {
        type: "string";
        required: boolean;
        control: "date";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    } | {
        type: "action";
        required: boolean;
        control: "action";
        label?: string | undefined;
        defaultValue?: undefined;
        description?: string | undefined;
    } | {
        type: "string";
        required: boolean;
        control: "textContent";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    } | {
        type: "animationAction";
        required: boolean;
        control: "animationAction";
        label?: string | undefined;
        defaultValue?: undefined;
        description?: string | undefined;
    }>;
    initialProps?: string[] | undefined;
}, {
    props: Record<string, {
        options: string[];
        type: "string";
        required: boolean;
        control: "tag";
        label?: string | undefined;
        defaultValue?: undefined;
        description?: string | undefined;
    } | {
        type: "number";
        required: boolean;
        control: "number";
        label?: string | undefined;
        defaultValue?: number | undefined;
        description?: string | undefined;
    } | {
        type: "number";
        required: boolean;
        control: "range";
        label?: string | undefined;
        defaultValue?: number | undefined;
        description?: string | undefined;
    } | {
        type: "string";
        required: boolean;
        control: "text";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
        rows?: number | undefined;
    } | {
        type: "resource";
        required: boolean;
        control: "resource";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    } | {
        type: "string";
        required: boolean;
        control: "code";
        language: "html" | "markdown";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    } | {
        type: "string";
        required: boolean;
        control: "codetext";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    } | {
        type: "string";
        required: boolean;
        control: "color";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    } | {
        type: "boolean";
        required: boolean;
        control: "boolean";
        label?: string | undefined;
        defaultValue?: boolean | undefined;
        description?: string | undefined;
    } | {
        options: string[];
        type: "string";
        required: boolean;
        control: "radio";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    } | {
        options: string[];
        type: "string";
        required: boolean;
        control: "inline-radio";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    } | {
        options: string[];
        type: "string";
        required: boolean;
        control: "select";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    } | {
        options: string[];
        type: "string[]";
        required: boolean;
        control: "check";
        label?: string | undefined;
        defaultValue?: string[] | undefined;
        description?: string | undefined;
    } | {
        options: string[];
        type: "string[]";
        required: boolean;
        control: "inline-check";
        label?: string | undefined;
        defaultValue?: string[] | undefined;
        description?: string | undefined;
    } | {
        options: string[];
        type: "string[]";
        required: boolean;
        control: "multi-select";
        label?: string | undefined;
        defaultValue?: string[] | undefined;
        description?: string | undefined;
    } | {
        type: "string";
        required: boolean;
        control: "file";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
        accept?: string | undefined;
    } | {
        type: "string";
        required: boolean;
        control: "url";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    } | {
        type: "json";
        required: boolean;
        control: "json";
        label?: string | undefined;
        defaultValue?: unknown;
        description?: string | undefined;
    } | {
        type: "string";
        required: boolean;
        control: "date";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    } | {
        type: "action";
        required: boolean;
        control: "action";
        label?: string | undefined;
        defaultValue?: undefined;
        description?: string | undefined;
    } | {
        type: "string";
        required: boolean;
        control: "textContent";
        label?: string | undefined;
        defaultValue?: string | undefined;
        description?: string | undefined;
    } | {
        type: "animationAction";
        required: boolean;
        control: "animationAction";
        label?: string | undefined;
        defaultValue?: undefined;
        description?: string | undefined;
    }>;
    initialProps?: string[] | undefined;
}>;
export type WsComponentPropsMeta = z.infer<typeof WsComponentPropsMeta>;
export declare const componentCategories: readonly ["general", "typography", "media", "animations", "data", "forms", "localization", "radix", "xml", "hidden", "internal"];
export declare const stateCategories: readonly ["states", "component-states"];
export declare const ComponentState: z.ZodObject<{
    category: z.ZodOptional<z.ZodEnum<["states", "component-states"]>>;
    selector: z.ZodString;
    label: z.ZodString;
}, "strip", z.ZodTypeAny, {
    selector: string;
    label: string;
    category?: "states" | "component-states" | undefined;
}, {
    selector: string;
    label: string;
    category?: "states" | "component-states" | undefined;
}>;
export type ComponentState = z.infer<typeof ComponentState>;
export declare const defaultStates: ComponentState[];
export declare const ContentModel: z.ZodObject<{
    category: z.ZodUnion<[z.ZodLiteral<"instance">, z.ZodLiteral<"none">]>;
    /**
     * enforce direct children of category or components
     */
    children: z.ZodArray<z.ZodType<"instance" | "rich-text" | (string & {}), z.ZodTypeDef, "instance" | "rich-text" | (string & {})>, "many">;
    /**
     * enforce descendants of category or components
     */
    descendants: z.ZodOptional<z.ZodArray<z.ZodType<"instance" | "rich-text" | (string & {}), z.ZodTypeDef, "instance" | "rich-text" | (string & {})>, "many">>;
}, "strip", z.ZodTypeAny, {
    category: "none" | "instance";
    children: ("instance" | "rich-text" | (string & {}))[];
    descendants?: ("instance" | "rich-text" | (string & {}))[] | undefined;
}, {
    category: "none" | "instance";
    children: ("instance" | "rich-text" | (string & {}))[];
    descendants?: ("instance" | "rich-text" | (string & {}))[] | undefined;
}>;
export type ContentModel = z.infer<typeof ContentModel>;
export declare const WsComponentMeta: z.ZodObject<{
    category: z.ZodOptional<z.ZodEnum<["general", "typography", "media", "animations", "data", "forms", "localization", "radix", "xml", "hidden", "internal"]>>;
    /**
     * a property used as textual placeholder when no content specified while in builder
     * also signals to not insert components inside unless dropped explicitly
     */
    placeholder: z.ZodOptional<z.ZodString>;
    contentModel: z.ZodOptional<z.ZodObject<{
        category: z.ZodUnion<[z.ZodLiteral<"instance">, z.ZodLiteral<"none">]>;
        /**
         * enforce direct children of category or components
         */
        children: z.ZodArray<z.ZodType<"instance" | "rich-text" | (string & {}), z.ZodTypeDef, "instance" | "rich-text" | (string & {})>, "many">;
        /**
         * enforce descendants of category or components
         */
        descendants: z.ZodOptional<z.ZodArray<z.ZodType<"instance" | "rich-text" | (string & {}), z.ZodTypeDef, "instance" | "rich-text" | (string & {})>, "many">>;
    }, "strip", z.ZodTypeAny, {
        category: "none" | "instance";
        children: ("instance" | "rich-text" | (string & {}))[];
        descendants?: ("instance" | "rich-text" | (string & {}))[] | undefined;
    }, {
        category: "none" | "instance";
        children: ("instance" | "rich-text" | (string & {}))[];
        descendants?: ("instance" | "rich-text" | (string & {}))[] | undefined;
    }>>;
    indexWithinAncestor: z.ZodOptional<z.ZodString>;
    label: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    icon: z.ZodString;
    presetStyle: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodArray<z.ZodObject<{
        state: z.ZodOptional<z.ZodString>;
        property: z.ZodString;
        value: z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"image">;
            value: z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"asset">;
                value: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "asset";
            }, {
                value: string;
                type: "asset";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"url">;
                url: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                type: "url";
                url: string;
            }, {
                type: "url";
                url: string;
            }>]>;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: {
                value: string;
                type: "asset";
            } | {
                type: "url";
                url: string;
            };
            type: "image";
            hidden?: boolean | undefined;
        }, {
            value: {
                value: string;
                type: "asset";
            } | {
                type: "url";
                url: string;
            };
            type: "image";
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"layers">;
            value: z.ZodArray<z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"unit">;
                unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                value: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"keyword">;
                value: z.ZodString;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unparsed">;
                value: z.ZodString;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"image">;
                value: z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"asset">;
                    value: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "asset";
                }, {
                    value: string;
                    type: "asset";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"url">;
                    url: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    type: "url";
                    url: string;
                }, {
                    type: "url";
                    url: string;
                }>]>;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: {
                    value: string;
                    type: "asset";
                } | {
                    type: "url";
                    url: string;
                };
                type: "image";
                hidden?: boolean | undefined;
            }, {
                value: {
                    value: string;
                    type: "asset";
                } | {
                    type: "url";
                    url: string;
                };
                type: "image";
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"tuple">;
                value: z.ZodArray<z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"unit">;
                    unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                    value: z.ZodNumber;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"keyword">;
                    value: z.ZodString;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                }, {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"unparsed">;
                    value: z.ZodString;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                }, {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"image">;
                    value: z.ZodUnion<[z.ZodObject<{
                        type: z.ZodLiteral<"asset">;
                        value: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        value: string;
                        type: "asset";
                    }, {
                        value: string;
                        type: "asset";
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"url">;
                        url: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        type: "url";
                        url: string;
                    }, {
                        type: "url";
                        url: string;
                    }>]>;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: {
                        value: string;
                        type: "asset";
                    } | {
                        type: "url";
                        url: string;
                    };
                    type: "image";
                    hidden?: boolean | undefined;
                }, {
                    value: {
                        value: string;
                        type: "asset";
                    } | {
                        type: "url";
                        url: string;
                    };
                    type: "image";
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"rgb">;
                    r: z.ZodNumber;
                    g: z.ZodNumber;
                    b: z.ZodNumber;
                    alpha: z.ZodNumber;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                }, {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                }>, z.ZodType<{
                    type: "function";
                    name: string;
                    args: StyleValue;
                    hidden?: boolean;
                }, z.ZodTypeDef, {
                    type: "function";
                    name: string;
                    args: StyleValue;
                    hidden?: boolean;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"var">;
                    value: z.ZodString;
                    fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                        type: z.ZodLiteral<"unparsed">;
                        value: z.ZodString;
                        hidden: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    }, {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"keyword">;
                        value: z.ZodString;
                        hidden: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    }, {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"unit">;
                        unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                        value: z.ZodNumber;
                        hidden: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    }, {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"rgb">;
                        r: z.ZodNumber;
                        g: z.ZodNumber;
                        b: z.ZodNumber;
                        alpha: z.ZodNumber;
                        hidden: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    }, {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    }>]>>;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                }, {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                }>]>, "many">;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: ({
                    value: {
                        value: string;
                        type: "asset";
                    } | {
                        type: "url";
                        url: string;
                    };
                    type: "image";
                    hidden?: boolean | undefined;
                } | {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | {
                    type: "function";
                    name: string;
                    args: StyleValue;
                    hidden?: boolean;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                })[];
                type: "tuple";
                hidden?: boolean | undefined;
            }, {
                value: ({
                    value: {
                        value: string;
                        type: "asset";
                    } | {
                        type: "url";
                        url: string;
                    };
                    type: "image";
                    hidden?: boolean | undefined;
                } | {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | {
                    type: "function";
                    name: string;
                    args: StyleValue;
                    hidden?: boolean;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                })[];
                type: "tuple";
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"shadow">;
                hidden: z.ZodOptional<z.ZodBoolean>;
                position: z.ZodUnion<[z.ZodLiteral<"inset">, z.ZodLiteral<"outset">]>;
                offsetX: z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"unit">;
                    unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                    value: z.ZodNumber;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"var">;
                    value: z.ZodString;
                    fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                        type: z.ZodLiteral<"unparsed">;
                        value: z.ZodString;
                        hidden: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    }, {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"keyword">;
                        value: z.ZodString;
                        hidden: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    }, {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"unit">;
                        unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                        value: z.ZodNumber;
                        hidden: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    }, {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"rgb">;
                        r: z.ZodNumber;
                        g: z.ZodNumber;
                        b: z.ZodNumber;
                        alpha: z.ZodNumber;
                        hidden: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    }, {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    }>]>>;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                }, {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                }>]>;
                offsetY: z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"unit">;
                    unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                    value: z.ZodNumber;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"var">;
                    value: z.ZodString;
                    fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                        type: z.ZodLiteral<"unparsed">;
                        value: z.ZodString;
                        hidden: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    }, {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"keyword">;
                        value: z.ZodString;
                        hidden: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    }, {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"unit">;
                        unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                        value: z.ZodNumber;
                        hidden: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    }, {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"rgb">;
                        r: z.ZodNumber;
                        g: z.ZodNumber;
                        b: z.ZodNumber;
                        alpha: z.ZodNumber;
                        hidden: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    }, {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    }>]>>;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                }, {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                }>]>;
                blur: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"unit">;
                    unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                    value: z.ZodNumber;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"var">;
                    value: z.ZodString;
                    fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                        type: z.ZodLiteral<"unparsed">;
                        value: z.ZodString;
                        hidden: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    }, {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"keyword">;
                        value: z.ZodString;
                        hidden: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    }, {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"unit">;
                        unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                        value: z.ZodNumber;
                        hidden: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    }, {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"rgb">;
                        r: z.ZodNumber;
                        g: z.ZodNumber;
                        b: z.ZodNumber;
                        alpha: z.ZodNumber;
                        hidden: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    }, {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    }>]>>;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                }, {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                }>]>>;
                spread: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"unit">;
                    unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                    value: z.ZodNumber;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"var">;
                    value: z.ZodString;
                    fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                        type: z.ZodLiteral<"unparsed">;
                        value: z.ZodString;
                        hidden: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    }, {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"keyword">;
                        value: z.ZodString;
                        hidden: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    }, {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"unit">;
                        unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                        value: z.ZodNumber;
                        hidden: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    }, {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"rgb">;
                        r: z.ZodNumber;
                        g: z.ZodNumber;
                        b: z.ZodNumber;
                        alpha: z.ZodNumber;
                        hidden: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    }, {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    }>]>>;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                }, {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                }>]>>;
                color: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"rgb">;
                    r: z.ZodNumber;
                    g: z.ZodNumber;
                    b: z.ZodNumber;
                    alpha: z.ZodNumber;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                }, {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"keyword">;
                    value: z.ZodString;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                }, {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"var">;
                    value: z.ZodString;
                    fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                        type: z.ZodLiteral<"unparsed">;
                        value: z.ZodString;
                        hidden: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    }, {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"keyword">;
                        value: z.ZodString;
                        hidden: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    }, {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"unit">;
                        unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                        value: z.ZodNumber;
                        hidden: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    }, {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"rgb">;
                        r: z.ZodNumber;
                        g: z.ZodNumber;
                        b: z.ZodNumber;
                        alpha: z.ZodNumber;
                        hidden: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    }, {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    }>]>>;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                }, {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                }>]>>;
            }, "strip", z.ZodTypeAny, {
                position: "inset" | "outset";
                type: "shadow";
                offsetX: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                };
                offsetY: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                };
                color?: {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
                blur?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                } | undefined;
                spread?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                } | undefined;
            }, {
                position: "inset" | "outset";
                type: "shadow";
                offsetX: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                };
                offsetY: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                };
                color?: {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
                blur?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                } | undefined;
                spread?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                } | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"rgb">;
                r: z.ZodNumber;
                g: z.ZodNumber;
                b: z.ZodNumber;
                alpha: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            }, {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"invalid">;
                value: z.ZodString;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "invalid";
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "invalid";
                hidden?: boolean | undefined;
            }>, z.ZodType<{
                type: "function";
                name: string;
                args: StyleValue;
                hidden?: boolean;
            }, z.ZodTypeDef, {
                type: "function";
                name: string;
                args: StyleValue;
                hidden?: boolean;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"var">;
                value: z.ZodString;
                fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"unparsed">;
                    value: z.ZodString;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                }, {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"keyword">;
                    value: z.ZodString;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                }, {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"unit">;
                    unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                    value: z.ZodNumber;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"rgb">;
                    r: z.ZodNumber;
                    g: z.ZodNumber;
                    b: z.ZodNumber;
                    alpha: z.ZodNumber;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                }, {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                }>]>>;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            }>]>, "many">;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: ({
                value: {
                    value: string;
                    type: "asset";
                } | {
                    type: "url";
                    url: string;
                };
                type: "image";
                hidden?: boolean | undefined;
            } | {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                type: "function";
                name: string;
                args: StyleValue;
                hidden?: boolean;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | {
                value: ({
                    value: {
                        value: string;
                        type: "asset";
                    } | {
                        type: "url";
                        url: string;
                    };
                    type: "image";
                    hidden?: boolean | undefined;
                } | {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | {
                    type: "function";
                    name: string;
                    args: StyleValue;
                    hidden?: boolean;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                })[];
                type: "tuple";
                hidden?: boolean | undefined;
            } | {
                position: "inset" | "outset";
                type: "shadow";
                offsetX: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                };
                offsetY: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                };
                color?: {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
                blur?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                } | undefined;
                spread?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                } | undefined;
            } | {
                value: string;
                type: "invalid";
                hidden?: boolean | undefined;
            })[];
            type: "layers";
            hidden?: boolean | undefined;
        }, {
            value: ({
                value: {
                    value: string;
                    type: "asset";
                } | {
                    type: "url";
                    url: string;
                };
                type: "image";
                hidden?: boolean | undefined;
            } | {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                type: "function";
                name: string;
                args: StyleValue;
                hidden?: boolean;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | {
                value: ({
                    value: {
                        value: string;
                        type: "asset";
                    } | {
                        type: "url";
                        url: string;
                    };
                    type: "image";
                    hidden?: boolean | undefined;
                } | {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | {
                    type: "function";
                    name: string;
                    args: StyleValue;
                    hidden?: boolean;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                })[];
                type: "tuple";
                hidden?: boolean | undefined;
            } | {
                position: "inset" | "outset";
                type: "shadow";
                offsetX: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                };
                offsetY: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                };
                color?: {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
                blur?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                } | undefined;
                spread?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                } | undefined;
            } | {
                value: string;
                type: "invalid";
                hidden?: boolean | undefined;
            })[];
            type: "layers";
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"unit">;
            unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
            value: z.ZodNumber;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        }, {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"keyword">;
            value: z.ZodString;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: string;
            type: "keyword";
            hidden?: boolean | undefined;
        }, {
            value: string;
            type: "keyword";
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"fontFamily">;
            value: z.ZodArray<z.ZodString, "many">;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: string[];
            type: "fontFamily";
            hidden?: boolean | undefined;
        }, {
            value: string[];
            type: "fontFamily";
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"rgb">;
            r: z.ZodNumber;
            g: z.ZodNumber;
            b: z.ZodNumber;
            alpha: z.ZodNumber;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        }, {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"unparsed">;
            value: z.ZodString;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: string;
            type: "unparsed";
            hidden?: boolean | undefined;
        }, {
            value: string;
            type: "unparsed";
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"tuple">;
            value: z.ZodArray<z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"unit">;
                unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                value: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"keyword">;
                value: z.ZodString;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unparsed">;
                value: z.ZodString;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"image">;
                value: z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"asset">;
                    value: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "asset";
                }, {
                    value: string;
                    type: "asset";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"url">;
                    url: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    type: "url";
                    url: string;
                }, {
                    type: "url";
                    url: string;
                }>]>;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: {
                    value: string;
                    type: "asset";
                } | {
                    type: "url";
                    url: string;
                };
                type: "image";
                hidden?: boolean | undefined;
            }, {
                value: {
                    value: string;
                    type: "asset";
                } | {
                    type: "url";
                    url: string;
                };
                type: "image";
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"rgb">;
                r: z.ZodNumber;
                g: z.ZodNumber;
                b: z.ZodNumber;
                alpha: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            }, {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            }>, z.ZodType<{
                type: "function";
                name: string;
                args: StyleValue;
                hidden?: boolean;
            }, z.ZodTypeDef, {
                type: "function";
                name: string;
                args: StyleValue;
                hidden?: boolean;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"var">;
                value: z.ZodString;
                fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"unparsed">;
                    value: z.ZodString;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                }, {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"keyword">;
                    value: z.ZodString;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                }, {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"unit">;
                    unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                    value: z.ZodNumber;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"rgb">;
                    r: z.ZodNumber;
                    g: z.ZodNumber;
                    b: z.ZodNumber;
                    alpha: z.ZodNumber;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                }, {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                }>]>>;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            }>]>, "many">;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: ({
                value: {
                    value: string;
                    type: "asset";
                } | {
                    type: "url";
                    url: string;
                };
                type: "image";
                hidden?: boolean | undefined;
            } | {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                type: "function";
                name: string;
                args: StyleValue;
                hidden?: boolean;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            })[];
            type: "tuple";
            hidden?: boolean | undefined;
        }, {
            value: ({
                value: {
                    value: string;
                    type: "asset";
                } | {
                    type: "url";
                    url: string;
                };
                type: "image";
                hidden?: boolean | undefined;
            } | {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                type: "function";
                name: string;
                args: StyleValue;
                hidden?: boolean;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            })[];
            type: "tuple";
            hidden?: boolean | undefined;
        }>, z.ZodType<{
            type: "function";
            name: string;
            args: StyleValue;
            hidden?: boolean;
        }, z.ZodTypeDef, {
            type: "function";
            name: string;
            args: StyleValue;
            hidden?: boolean;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"guaranteedInvalid">;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "guaranteedInvalid";
            hidden?: boolean | undefined;
        }, {
            type: "guaranteedInvalid";
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"invalid">;
            value: z.ZodString;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: string;
            type: "invalid";
            hidden?: boolean | undefined;
        }, {
            value: string;
            type: "invalid";
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"unset">;
            value: z.ZodLiteral<"">;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: "";
            type: "unset";
            hidden?: boolean | undefined;
        }, {
            value: "";
            type: "unset";
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"var">;
            value: z.ZodString;
            fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"unparsed">;
                value: z.ZodString;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"keyword">;
                value: z.ZodString;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unit">;
                unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                value: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"rgb">;
                r: z.ZodNumber;
                g: z.ZodNumber;
                b: z.ZodNumber;
                alpha: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            }, {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            }>]>>;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        }, {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"shadow">;
            hidden: z.ZodOptional<z.ZodBoolean>;
            position: z.ZodUnion<[z.ZodLiteral<"inset">, z.ZodLiteral<"outset">]>;
            offsetX: z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"unit">;
                unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                value: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"var">;
                value: z.ZodString;
                fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"unparsed">;
                    value: z.ZodString;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                }, {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"keyword">;
                    value: z.ZodString;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                }, {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"unit">;
                    unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                    value: z.ZodNumber;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"rgb">;
                    r: z.ZodNumber;
                    g: z.ZodNumber;
                    b: z.ZodNumber;
                    alpha: z.ZodNumber;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                }, {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                }>]>>;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            }>]>;
            offsetY: z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"unit">;
                unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                value: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"var">;
                value: z.ZodString;
                fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"unparsed">;
                    value: z.ZodString;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                }, {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"keyword">;
                    value: z.ZodString;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                }, {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"unit">;
                    unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                    value: z.ZodNumber;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"rgb">;
                    r: z.ZodNumber;
                    g: z.ZodNumber;
                    b: z.ZodNumber;
                    alpha: z.ZodNumber;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                }, {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                }>]>>;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            }>]>;
            blur: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"unit">;
                unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                value: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"var">;
                value: z.ZodString;
                fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"unparsed">;
                    value: z.ZodString;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                }, {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"keyword">;
                    value: z.ZodString;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                }, {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"unit">;
                    unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                    value: z.ZodNumber;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"rgb">;
                    r: z.ZodNumber;
                    g: z.ZodNumber;
                    b: z.ZodNumber;
                    alpha: z.ZodNumber;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                }, {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                }>]>>;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            }>]>>;
            spread: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"unit">;
                unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                value: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }, {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"var">;
                value: z.ZodString;
                fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"unparsed">;
                    value: z.ZodString;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                }, {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"keyword">;
                    value: z.ZodString;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                }, {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"unit">;
                    unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                    value: z.ZodNumber;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"rgb">;
                    r: z.ZodNumber;
                    g: z.ZodNumber;
                    b: z.ZodNumber;
                    alpha: z.ZodNumber;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                }, {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                }>]>>;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            }>]>>;
            color: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"rgb">;
                r: z.ZodNumber;
                g: z.ZodNumber;
                b: z.ZodNumber;
                alpha: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            }, {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"keyword">;
                value: z.ZodString;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"var">;
                value: z.ZodString;
                fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"unparsed">;
                    value: z.ZodString;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                }, {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"keyword">;
                    value: z.ZodString;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                }, {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"unit">;
                    unit: z.ZodType<"number" | import("@webstudio-is/css-engine").__Unit, z.ZodTypeDef, "number" | import("@webstudio-is/css-engine").__Unit>;
                    value: z.ZodNumber;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }, {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"rgb">;
                    r: z.ZodNumber;
                    g: z.ZodNumber;
                    b: z.ZodNumber;
                    alpha: z.ZodNumber;
                    hidden: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                }, {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                }>]>>;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            }, {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            }>]>>;
        }, "strip", z.ZodTypeAny, {
            position: "inset" | "outset";
            type: "shadow";
            offsetX: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            };
            offsetY: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            };
            color?: {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
            blur?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
            spread?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
        }, {
            position: "inset" | "outset";
            type: "shadow";
            offsetX: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            };
            offsetY: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            };
            color?: {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
            blur?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
            spread?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
        }>]>;
    }, "strip", z.ZodTypeAny, {
        value: {
            value: {
                value: string;
                type: "asset";
            } | {
                type: "url";
                url: string;
            };
            type: "image";
            hidden?: boolean | undefined;
        } | {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "keyword";
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "unparsed";
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | {
            type: "function";
            name: string;
            args: StyleValue;
            hidden?: boolean;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        } | {
            value: ({
                value: {
                    value: string;
                    type: "asset";
                } | {
                    type: "url";
                    url: string;
                };
                type: "image";
                hidden?: boolean | undefined;
            } | {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                type: "function";
                name: string;
                args: StyleValue;
                hidden?: boolean;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            })[];
            type: "tuple";
            hidden?: boolean | undefined;
        } | {
            position: "inset" | "outset";
            type: "shadow";
            offsetX: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            };
            offsetY: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            };
            color?: {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
            blur?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
            spread?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
        } | {
            value: string;
            type: "invalid";
            hidden?: boolean | undefined;
        } | {
            value: ({
                value: {
                    value: string;
                    type: "asset";
                } | {
                    type: "url";
                    url: string;
                };
                type: "image";
                hidden?: boolean | undefined;
            } | {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                type: "function";
                name: string;
                args: StyleValue;
                hidden?: boolean;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | {
                value: ({
                    value: {
                        value: string;
                        type: "asset";
                    } | {
                        type: "url";
                        url: string;
                    };
                    type: "image";
                    hidden?: boolean | undefined;
                } | {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | {
                    type: "function";
                    name: string;
                    args: StyleValue;
                    hidden?: boolean;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                })[];
                type: "tuple";
                hidden?: boolean | undefined;
            } | {
                position: "inset" | "outset";
                type: "shadow";
                offsetX: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                };
                offsetY: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                };
                color?: {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
                blur?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                } | undefined;
                spread?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                } | undefined;
            } | {
                value: string;
                type: "invalid";
                hidden?: boolean | undefined;
            })[];
            type: "layers";
            hidden?: boolean | undefined;
        } | {
            value: string[];
            type: "fontFamily";
            hidden?: boolean | undefined;
        } | {
            type: "guaranteedInvalid";
            hidden?: boolean | undefined;
        } | {
            value: "";
            type: "unset";
            hidden?: boolean | undefined;
        };
        property: string;
        state?: string | undefined;
    }, {
        value: {
            value: {
                value: string;
                type: "asset";
            } | {
                type: "url";
                url: string;
            };
            type: "image";
            hidden?: boolean | undefined;
        } | {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "keyword";
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "unparsed";
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | {
            type: "function";
            name: string;
            args: StyleValue;
            hidden?: boolean;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        } | {
            value: ({
                value: {
                    value: string;
                    type: "asset";
                } | {
                    type: "url";
                    url: string;
                };
                type: "image";
                hidden?: boolean | undefined;
            } | {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                type: "function";
                name: string;
                args: StyleValue;
                hidden?: boolean;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            })[];
            type: "tuple";
            hidden?: boolean | undefined;
        } | {
            position: "inset" | "outset";
            type: "shadow";
            offsetX: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            };
            offsetY: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            };
            color?: {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
            blur?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
            spread?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
        } | {
            value: string;
            type: "invalid";
            hidden?: boolean | undefined;
        } | {
            value: ({
                value: {
                    value: string;
                    type: "asset";
                } | {
                    type: "url";
                    url: string;
                };
                type: "image";
                hidden?: boolean | undefined;
            } | {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                type: "function";
                name: string;
                args: StyleValue;
                hidden?: boolean;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | {
                value: ({
                    value: {
                        value: string;
                        type: "asset";
                    } | {
                        type: "url";
                        url: string;
                    };
                    type: "image";
                    hidden?: boolean | undefined;
                } | {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | {
                    type: "function";
                    name: string;
                    args: StyleValue;
                    hidden?: boolean;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                })[];
                type: "tuple";
                hidden?: boolean | undefined;
            } | {
                position: "inset" | "outset";
                type: "shadow";
                offsetX: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                };
                offsetY: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                };
                color?: {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
                blur?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                } | undefined;
                spread?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                } | undefined;
            } | {
                value: string;
                type: "invalid";
                hidden?: boolean | undefined;
            })[];
            type: "layers";
            hidden?: boolean | undefined;
        } | {
            value: string[];
            type: "fontFamily";
            hidden?: boolean | undefined;
        } | {
            type: "guaranteedInvalid";
            hidden?: boolean | undefined;
        } | {
            value: "";
            type: "unset";
            hidden?: boolean | undefined;
        };
        property: string;
        state?: string | undefined;
    }>, "many">>>;
    states: z.ZodOptional<z.ZodArray<z.ZodObject<{
        category: z.ZodOptional<z.ZodEnum<["states", "component-states"]>>;
        selector: z.ZodString;
        label: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        selector: string;
        label: string;
        category?: "states" | "component-states" | undefined;
    }, {
        selector: string;
        label: string;
        category?: "states" | "component-states" | undefined;
    }>, "many">>;
    order: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    icon: string;
    order?: number | undefined;
    label?: string | undefined;
    description?: string | undefined;
    states?: {
        selector: string;
        label: string;
        category?: "states" | "component-states" | undefined;
    }[] | undefined;
    category?: "hidden" | "data" | "media" | "general" | "typography" | "animations" | "forms" | "localization" | "radix" | "xml" | "internal" | undefined;
    placeholder?: string | undefined;
    contentModel?: {
        category: "none" | "instance";
        children: ("instance" | "rich-text" | (string & {}))[];
        descendants?: ("instance" | "rich-text" | (string & {}))[] | undefined;
    } | undefined;
    indexWithinAncestor?: string | undefined;
    presetStyle?: Record<string, {
        value: {
            value: {
                value: string;
                type: "asset";
            } | {
                type: "url";
                url: string;
            };
            type: "image";
            hidden?: boolean | undefined;
        } | {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "keyword";
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "unparsed";
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | {
            type: "function";
            name: string;
            args: StyleValue;
            hidden?: boolean;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        } | {
            value: ({
                value: {
                    value: string;
                    type: "asset";
                } | {
                    type: "url";
                    url: string;
                };
                type: "image";
                hidden?: boolean | undefined;
            } | {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                type: "function";
                name: string;
                args: StyleValue;
                hidden?: boolean;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            })[];
            type: "tuple";
            hidden?: boolean | undefined;
        } | {
            position: "inset" | "outset";
            type: "shadow";
            offsetX: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            };
            offsetY: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            };
            color?: {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
            blur?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
            spread?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
        } | {
            value: string;
            type: "invalid";
            hidden?: boolean | undefined;
        } | {
            value: ({
                value: {
                    value: string;
                    type: "asset";
                } | {
                    type: "url";
                    url: string;
                };
                type: "image";
                hidden?: boolean | undefined;
            } | {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                type: "function";
                name: string;
                args: StyleValue;
                hidden?: boolean;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | {
                value: ({
                    value: {
                        value: string;
                        type: "asset";
                    } | {
                        type: "url";
                        url: string;
                    };
                    type: "image";
                    hidden?: boolean | undefined;
                } | {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | {
                    type: "function";
                    name: string;
                    args: StyleValue;
                    hidden?: boolean;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                })[];
                type: "tuple";
                hidden?: boolean | undefined;
            } | {
                position: "inset" | "outset";
                type: "shadow";
                offsetX: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                };
                offsetY: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                };
                color?: {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
                blur?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                } | undefined;
                spread?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                } | undefined;
            } | {
                value: string;
                type: "invalid";
                hidden?: boolean | undefined;
            })[];
            type: "layers";
            hidden?: boolean | undefined;
        } | {
            value: string[];
            type: "fontFamily";
            hidden?: boolean | undefined;
        } | {
            type: "guaranteedInvalid";
            hidden?: boolean | undefined;
        } | {
            value: "";
            type: "unset";
            hidden?: boolean | undefined;
        };
        property: string;
        state?: string | undefined;
    }[]> | undefined;
}, {
    icon: string;
    order?: number | undefined;
    label?: string | undefined;
    description?: string | undefined;
    states?: {
        selector: string;
        label: string;
        category?: "states" | "component-states" | undefined;
    }[] | undefined;
    category?: "hidden" | "data" | "media" | "general" | "typography" | "animations" | "forms" | "localization" | "radix" | "xml" | "internal" | undefined;
    placeholder?: string | undefined;
    contentModel?: {
        category: "none" | "instance";
        children: ("instance" | "rich-text" | (string & {}))[];
        descendants?: ("instance" | "rich-text" | (string & {}))[] | undefined;
    } | undefined;
    indexWithinAncestor?: string | undefined;
    presetStyle?: Record<string, {
        value: {
            value: {
                value: string;
                type: "asset";
            } | {
                type: "url";
                url: string;
            };
            type: "image";
            hidden?: boolean | undefined;
        } | {
            value: number;
            type: "unit";
            unit: "number" | import("@webstudio-is/css-engine").__Unit;
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "keyword";
            hidden?: boolean | undefined;
        } | {
            value: string;
            type: "unparsed";
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | {
            type: "function";
            name: string;
            args: StyleValue;
            hidden?: boolean;
        } | {
            value: string;
            type: "var";
            fallback?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        } | {
            value: ({
                value: {
                    value: string;
                    type: "asset";
                } | {
                    type: "url";
                    url: string;
                };
                type: "image";
                hidden?: boolean | undefined;
            } | {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                type: "function";
                name: string;
                args: StyleValue;
                hidden?: boolean;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            })[];
            type: "tuple";
            hidden?: boolean | undefined;
        } | {
            position: "inset" | "outset";
            type: "shadow";
            offsetX: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            };
            offsetY: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            };
            color?: {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
            blur?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
            spread?: {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | undefined;
        } | {
            value: string;
            type: "invalid";
            hidden?: boolean | undefined;
        } | {
            value: ({
                value: {
                    value: string;
                    type: "asset";
                } | {
                    type: "url";
                    url: string;
                };
                type: "image";
                hidden?: boolean | undefined;
            } | {
                value: number;
                type: "unit";
                unit: "number" | import("@webstudio-is/css-engine").__Unit;
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "keyword";
                hidden?: boolean | undefined;
            } | {
                value: string;
                type: "unparsed";
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | {
                type: "function";
                name: string;
                args: StyleValue;
                hidden?: boolean;
            } | {
                value: string;
                type: "var";
                fallback?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } | {
                value: ({
                    value: {
                        value: string;
                        type: "asset";
                    } | {
                        type: "url";
                        url: string;
                    };
                    type: "image";
                    hidden?: boolean | undefined;
                } | {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "unparsed";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | {
                    type: "function";
                    name: string;
                    args: StyleValue;
                    hidden?: boolean;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                })[];
                type: "tuple";
                hidden?: boolean | undefined;
            } | {
                position: "inset" | "outset";
                type: "shadow";
                offsetX: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                };
                offsetY: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                };
                color?: {
                    value: string;
                    type: "keyword";
                    hidden?: boolean | undefined;
                } | {
                    type: "rgb";
                    r: number;
                    g: number;
                    b: number;
                    alpha: number;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                } | undefined;
                hidden?: boolean | undefined;
                blur?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                } | undefined;
                spread?: {
                    value: number;
                    type: "unit";
                    unit: "number" | import("@webstudio-is/css-engine").__Unit;
                    hidden?: boolean | undefined;
                } | {
                    value: string;
                    type: "var";
                    fallback?: {
                        value: number;
                        type: "unit";
                        unit: "number" | import("@webstudio-is/css-engine").__Unit;
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "keyword";
                        hidden?: boolean | undefined;
                    } | {
                        value: string;
                        type: "unparsed";
                        hidden?: boolean | undefined;
                    } | {
                        type: "rgb";
                        r: number;
                        g: number;
                        b: number;
                        alpha: number;
                        hidden?: boolean | undefined;
                    } | undefined;
                    hidden?: boolean | undefined;
                } | undefined;
            } | {
                value: string;
                type: "invalid";
                hidden?: boolean | undefined;
            })[];
            type: "layers";
            hidden?: boolean | undefined;
        } | {
            value: string[];
            type: "fontFamily";
            hidden?: boolean | undefined;
        } | {
            type: "guaranteedInvalid";
            hidden?: boolean | undefined;
        } | {
            value: "";
            type: "unset";
            hidden?: boolean | undefined;
        };
        property: string;
        state?: string | undefined;
    }[]> | undefined;
}>;
export type WsComponentMeta = Omit<z.infer<typeof WsComponentMeta>, "presetStyle"> & {
    presetStyle?: PresetStyle;
};
export {};
