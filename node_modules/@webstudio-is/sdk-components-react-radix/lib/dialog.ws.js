import { TriggerIcon as e, OverlayIcon as n, ContentIcon as i, HeadingIcon as r, TextIcon as a, ButtonElementIcon as s, DialogIcon as l } from "@webstudio-is/icons/svg";
import { defaultStates as c } from "@webstudio-is/sdk";
import { div as t, h2 as p, p as g, button as D } from "@webstudio-is/sdk/normalize.css";
import { radix as o } from "./shared/meta.js";
import { propsDialog as d, propsDialogTrigger as m, propsDialogContent as y, propsDialogOverlay as M, propsDialogClose as h, propsDialogTitle as C, propsDialogDescription as T } from "./__generated__/dialog.props.js";
import { buttonReset as f } from "./shared/preset-styles.js";
const O = {
  icon: e,
  contentModel: {
    category: "none",
    children: ["instance"]
  }
}, b = {
  icon: n,
  contentModel: {
    category: "none",
    children: ["instance"],
    descendants: [o.DialogContent]
  },
  presetStyle: {
    div: t
  }
}, B = {
  icon: i,
  contentModel: {
    category: "none",
    children: ["instance"],
    descendants: [
      o.DialogTitle,
      o.DialogDescription,
      o.DialogClose
    ]
  },
  presetStyle: {
    div: t
  }
}, E = {
  icon: r,
  contentModel: {
    category: "none",
    children: ["instance", "rich-text"]
  },
  presetStyle: {
    h2: p
  }
}, H = {
  icon: a,
  contentModel: {
    category: "none",
    children: ["instance", "rich-text"]
  },
  presetStyle: {
    p: g
  }
}, R = {
  icon: s,
  label: "Close Button",
  contentModel: {
    category: "none",
    children: ["instance", "rich-text"]
  },
  states: c,
  presetStyle: {
    button: [f, D].flat()
  }
}, j = {
  icon: l,
  contentModel: {
    category: "instance",
    children: ["instance"],
    descendants: [o.DialogTrigger, o.DialogOverlay]
  }
}, k = {
  props: d,
  initialProps: []
}, q = {
  props: m
}, w = {
  props: y,
  initialProps: []
}, z = {
  props: M,
  initialProps: []
}, A = {
  props: h,
  initialProps: []
}, F = {
  props: C,
  initialProps: []
}, G = {
  props: T,
  initialProps: []
};
export {
  j as metaDialog,
  R as metaDialogClose,
  B as metaDialogContent,
  H as metaDialogDescription,
  b as metaDialogOverlay,
  E as metaDialogTitle,
  O as metaDialogTrigger,
  k as propsMetaDialog,
  A as propsMetaDialogClose,
  w as propsMetaDialogContent,
  G as propsMetaDialogDescription,
  z as propsMetaDialogOverlay,
  F as propsMetaDialogTitle,
  q as propsMetaDialogTrigger
};
