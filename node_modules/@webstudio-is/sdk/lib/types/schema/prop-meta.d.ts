import { z } from "zod";
export declare const PropMeta: z.ZodUnion<[z.ZodObject<{
    control: z.ZodLiteral<"tag">;
    type: z.ZodLiteral<"string">;
    defaultValue: z.ZodOptional<z.ZodUndefined>;
    options: z.ZodArray<z.ZodString, "many">;
    label: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    required: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    options: string[];
    type: "string";
    required: boolean;
    control: "tag";
    label?: string | undefined;
    defaultValue?: undefined;
    description?: string | undefined;
}, {
    options: string[];
    type: "string";
    required: boolean;
    control: "tag";
    label?: string | undefined;
    defaultValue?: undefined;
    description?: string | undefined;
}>, z.ZodObject<{
    control: z.ZodLiteral<"number">;
    type: z.ZodLiteral<"number">;
    defaultValue: z.ZodOptional<z.ZodNumber>;
    label: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    required: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    type: "number";
    required: boolean;
    control: "number";
    label?: string | undefined;
    defaultValue?: number | undefined;
    description?: string | undefined;
}, {
    type: "number";
    required: boolean;
    control: "number";
    label?: string | undefined;
    defaultValue?: number | undefined;
    description?: string | undefined;
}>, z.ZodObject<{
    control: z.ZodLiteral<"range">;
    type: z.ZodLiteral<"number">;
    defaultValue: z.ZodOptional<z.ZodNumber>;
    label: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    required: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    type: "number";
    required: boolean;
    control: "range";
    label?: string | undefined;
    defaultValue?: number | undefined;
    description?: string | undefined;
}, {
    type: "number";
    required: boolean;
    control: "range";
    label?: string | undefined;
    defaultValue?: number | undefined;
    description?: string | undefined;
}>, z.ZodObject<{
    control: z.ZodLiteral<"text">;
    type: z.ZodLiteral<"string">;
    defaultValue: z.ZodOptional<z.ZodString>;
    /**
     * The number of rows in <textarea>. If set to 0 an <input> will be used instead.
     * In line with Storybook team's plan: https://github.com/storybookjs/storybook/issues/21100
     */
    rows: z.ZodOptional<z.ZodNumber>;
    label: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    required: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    type: "string";
    required: boolean;
    control: "text";
    label?: string | undefined;
    defaultValue?: string | undefined;
    description?: string | undefined;
    rows?: number | undefined;
}, {
    type: "string";
    required: boolean;
    control: "text";
    label?: string | undefined;
    defaultValue?: string | undefined;
    description?: string | undefined;
    rows?: number | undefined;
}>, z.ZodObject<{
    control: z.ZodLiteral<"resource">;
    type: z.ZodLiteral<"resource">;
    defaultValue: z.ZodOptional<z.ZodString>;
    label: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    required: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    type: "resource";
    required: boolean;
    control: "resource";
    label?: string | undefined;
    defaultValue?: string | undefined;
    description?: string | undefined;
}, {
    type: "resource";
    required: boolean;
    control: "resource";
    label?: string | undefined;
    defaultValue?: string | undefined;
    description?: string | undefined;
}>, z.ZodObject<{
    control: z.ZodLiteral<"code">;
    type: z.ZodLiteral<"string">;
    language: z.ZodUnion<[z.ZodLiteral<"html">, z.ZodLiteral<"markdown">]>;
    defaultValue: z.ZodOptional<z.ZodString>;
    label: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    required: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    type: "string";
    required: boolean;
    control: "code";
    language: "html" | "markdown";
    label?: string | undefined;
    defaultValue?: string | undefined;
    description?: string | undefined;
}, {
    type: "string";
    required: boolean;
    control: "code";
    language: "html" | "markdown";
    label?: string | undefined;
    defaultValue?: string | undefined;
    description?: string | undefined;
}>, z.ZodObject<{
    control: z.ZodLiteral<"codetext">;
    type: z.ZodLiteral<"string">;
    defaultValue: z.ZodOptional<z.ZodString>;
    label: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    required: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    type: "string";
    required: boolean;
    control: "codetext";
    label?: string | undefined;
    defaultValue?: string | undefined;
    description?: string | undefined;
}, {
    type: "string";
    required: boolean;
    control: "codetext";
    label?: string | undefined;
    defaultValue?: string | undefined;
    description?: string | undefined;
}>, z.ZodObject<{
    control: z.ZodLiteral<"color">;
    type: z.ZodLiteral<"string">;
    defaultValue: z.ZodOptional<z.ZodString>;
    label: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    required: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    type: "string";
    required: boolean;
    control: "color";
    label?: string | undefined;
    defaultValue?: string | undefined;
    description?: string | undefined;
}, {
    type: "string";
    required: boolean;
    control: "color";
    label?: string | undefined;
    defaultValue?: string | undefined;
    description?: string | undefined;
}>, z.ZodObject<{
    control: z.ZodLiteral<"boolean">;
    type: z.ZodLiteral<"boolean">;
    defaultValue: z.ZodOptional<z.ZodBoolean>;
    label: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    required: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    type: "boolean";
    required: boolean;
    control: "boolean";
    label?: string | undefined;
    defaultValue?: boolean | undefined;
    description?: string | undefined;
}, {
    type: "boolean";
    required: boolean;
    control: "boolean";
    label?: string | undefined;
    defaultValue?: boolean | undefined;
    description?: string | undefined;
}>, z.ZodObject<{
    control: z.ZodLiteral<"radio">;
    type: z.ZodLiteral<"string">;
    defaultValue: z.ZodOptional<z.ZodString>;
    options: z.ZodArray<z.ZodString, "many">;
    label: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    required: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    options: string[];
    type: "string";
    required: boolean;
    control: "radio";
    label?: string | undefined;
    defaultValue?: string | undefined;
    description?: string | undefined;
}, {
    options: string[];
    type: "string";
    required: boolean;
    control: "radio";
    label?: string | undefined;
    defaultValue?: string | undefined;
    description?: string | undefined;
}>, z.ZodObject<{
    control: z.ZodLiteral<"inline-radio">;
    type: z.ZodLiteral<"string">;
    defaultValue: z.ZodOptional<z.ZodString>;
    options: z.ZodArray<z.ZodString, "many">;
    label: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    required: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    options: string[];
    type: "string";
    required: boolean;
    control: "inline-radio";
    label?: string | undefined;
    defaultValue?: string | undefined;
    description?: string | undefined;
}, {
    options: string[];
    type: "string";
    required: boolean;
    control: "inline-radio";
    label?: string | undefined;
    defaultValue?: string | undefined;
    description?: string | undefined;
}>, z.ZodObject<{
    control: z.ZodLiteral<"select">;
    type: z.ZodLiteral<"string">;
    defaultValue: z.ZodOptional<z.ZodString>;
    options: z.ZodArray<z.ZodString, "many">;
    label: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    required: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    options: string[];
    type: "string";
    required: boolean;
    control: "select";
    label?: string | undefined;
    defaultValue?: string | undefined;
    description?: string | undefined;
}, {
    options: string[];
    type: "string";
    required: boolean;
    control: "select";
    label?: string | undefined;
    defaultValue?: string | undefined;
    description?: string | undefined;
}>, z.ZodObject<{
    control: z.ZodLiteral<"multi-select">;
    type: z.ZodLiteral<"string[]">;
    defaultValue: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    options: z.ZodArray<z.ZodString, "many">;
    label: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    required: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    options: string[];
    type: "string[]";
    required: boolean;
    control: "multi-select";
    label?: string | undefined;
    defaultValue?: string[] | undefined;
    description?: string | undefined;
}, {
    options: string[];
    type: "string[]";
    required: boolean;
    control: "multi-select";
    label?: string | undefined;
    defaultValue?: string[] | undefined;
    description?: string | undefined;
}>, z.ZodObject<{
    control: z.ZodLiteral<"check">;
    type: z.ZodLiteral<"string[]">;
    defaultValue: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    options: z.ZodArray<z.ZodString, "many">;
    label: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    required: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    options: string[];
    type: "string[]";
    required: boolean;
    control: "check";
    label?: string | undefined;
    defaultValue?: string[] | undefined;
    description?: string | undefined;
}, {
    options: string[];
    type: "string[]";
    required: boolean;
    control: "check";
    label?: string | undefined;
    defaultValue?: string[] | undefined;
    description?: string | undefined;
}>, z.ZodObject<{
    control: z.ZodLiteral<"inline-check">;
    type: z.ZodLiteral<"string[]">;
    defaultValue: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    options: z.ZodArray<z.ZodString, "many">;
    label: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    required: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    options: string[];
    type: "string[]";
    required: boolean;
    control: "inline-check";
    label?: string | undefined;
    defaultValue?: string[] | undefined;
    description?: string | undefined;
}, {
    options: string[];
    type: "string[]";
    required: boolean;
    control: "inline-check";
    label?: string | undefined;
    defaultValue?: string[] | undefined;
    description?: string | undefined;
}>, z.ZodObject<{
    control: z.ZodLiteral<"file">;
    type: z.ZodLiteral<"string">;
    defaultValue: z.ZodOptional<z.ZodString>;
    /** https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#accept */
    accept: z.ZodOptional<z.ZodString>;
    label: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    required: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    type: "string";
    required: boolean;
    control: "file";
    label?: string | undefined;
    defaultValue?: string | undefined;
    description?: string | undefined;
    accept?: string | undefined;
}, {
    type: "string";
    required: boolean;
    control: "file";
    label?: string | undefined;
    defaultValue?: string | undefined;
    description?: string | undefined;
    accept?: string | undefined;
}>, z.ZodObject<{
    control: z.ZodLiteral<"url">;
    type: z.ZodLiteral<"string">;
    defaultValue: z.ZodOptional<z.ZodString>;
    label: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    required: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    type: "string";
    required: boolean;
    control: "url";
    label?: string | undefined;
    defaultValue?: string | undefined;
    description?: string | undefined;
}, {
    type: "string";
    required: boolean;
    control: "url";
    label?: string | undefined;
    defaultValue?: string | undefined;
    description?: string | undefined;
}>, z.ZodObject<{
    control: z.ZodLiteral<"json">;
    type: z.ZodLiteral<"json">;
    defaultValue: z.ZodOptional<z.ZodUnknown>;
    label: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    required: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    type: "json";
    required: boolean;
    control: "json";
    label?: string | undefined;
    defaultValue?: unknown;
    description?: string | undefined;
}, {
    type: "json";
    required: boolean;
    control: "json";
    label?: string | undefined;
    defaultValue?: unknown;
    description?: string | undefined;
}>, z.ZodObject<{
    control: z.ZodLiteral<"date">;
    type: z.ZodLiteral<"string">;
    defaultValue: z.ZodOptional<z.ZodString>;
    label: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    required: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    type: "string";
    required: boolean;
    control: "date";
    label?: string | undefined;
    defaultValue?: string | undefined;
    description?: string | undefined;
}, {
    type: "string";
    required: boolean;
    control: "date";
    label?: string | undefined;
    defaultValue?: string | undefined;
    description?: string | undefined;
}>, z.ZodObject<{
    control: z.ZodLiteral<"action">;
    type: z.ZodLiteral<"action">;
    defaultValue: z.ZodOptional<z.ZodUndefined>;
    label: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    required: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    type: "action";
    required: boolean;
    control: "action";
    label?: string | undefined;
    defaultValue?: undefined;
    description?: string | undefined;
}, {
    type: "action";
    required: boolean;
    control: "action";
    label?: string | undefined;
    defaultValue?: undefined;
    description?: string | undefined;
}>, z.ZodObject<{
    control: z.ZodLiteral<"textContent">;
    type: z.ZodLiteral<"string">;
    defaultValue: z.ZodOptional<z.ZodString>;
    label: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    required: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    type: "string";
    required: boolean;
    control: "textContent";
    label?: string | undefined;
    defaultValue?: string | undefined;
    description?: string | undefined;
}, {
    type: "string";
    required: boolean;
    control: "textContent";
    label?: string | undefined;
    defaultValue?: string | undefined;
    description?: string | undefined;
}>, z.ZodObject<{
    control: z.ZodLiteral<"animationAction">;
    type: z.ZodLiteral<"animationAction">;
    defaultValue: z.ZodOptional<z.ZodUndefined>;
    label: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    required: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    type: "animationAction";
    required: boolean;
    control: "animationAction";
    label?: string | undefined;
    defaultValue?: undefined;
    description?: string | undefined;
}, {
    type: "animationAction";
    required: boolean;
    control: "animationAction";
    label?: string | undefined;
    defaultValue?: undefined;
    description?: string | undefined;
}>]>;
export type PropMeta = z.infer<typeof PropMeta>;
