import { AccordionIcon as t, ItemIcon as n, HeaderIcon as r, TriggerIcon as c, ContentIcon as i } from "@webstudio-is/icons/svg";
import { defaultStates as p } from "@webstudio-is/sdk";
import { div as e, h3 as a, button as s } from "@webstudio-is/sdk/normalize.css";
import { radix as o } from "./shared/meta.js";
import { buttonReset as d } from "./shared/preset-styles.js";
import { propsAccordion as l, propsAccordionItem as m, propsAccordionHeader as A, propsAccordionTrigger as g, propsAccordionContent as y } from "./__generated__/accordion.props.js";
const v = {
  icon: t,
  contentModel: {
    category: "instance",
    children: ["instance"],
    descendants: [o.AccordionItem]
  },
  presetStyle: {
    div: e
  }
}, x = {
  label: "Item",
  icon: n,
  indexWithinAncestor: o.Accordion,
  contentModel: {
    category: "none",
    children: ["instance"],
    descendants: [o.AccordionHeader, o.AccordionContent]
  },
  presetStyle: {
    div: e
  }
}, C = {
  label: "Item Header",
  icon: r,
  contentModel: {
    category: "none",
    children: ["instance"],
    descendants: [o.AccordionTrigger]
  },
  presetStyle: {
    h3: [
      ...a,
      {
        property: "margin-top",
        value: { type: "unit", unit: "px", value: 0 }
      },
      {
        property: "margin-bottom",
        value: { type: "unit", unit: "px", value: 0 }
      }
    ]
  }
}, H = {
  label: "Item Trigger",
  icon: c,
  contentModel: {
    category: "none",
    children: ["instance", "rich-text"]
  },
  states: [
    ...p,
    {
      category: "component-states",
      label: "Open",
      selector: "[data-state=open]"
    }
  ],
  presetStyle: {
    button: [s, d].flat()
  }
}, S = {
  label: "Item Content",
  icon: i,
  contentModel: {
    category: "none",
    children: ["instance", "rich-text"]
  },
  presetStyle: {
    div: e
  }
}, T = {
  props: l,
  initialProps: ["value", "collapsible"]
}, P = {
  props: m,
  initialProps: ["value"]
}, O = {
  props: A
}, R = {
  props: g
}, W = {
  props: y
};
export {
  v as metaAccordion,
  S as metaAccordionContent,
  C as metaAccordionHeader,
  x as metaAccordionItem,
  H as metaAccordionTrigger,
  T as propsMetaAccordion,
  W as propsMetaAccordionContent,
  O as propsMetaAccordionHeader,
  P as propsMetaAccordionItem,
  R as propsMetaAccordionTrigger
};
