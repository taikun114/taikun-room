import { jsx as _ } from "react/jsx-runtime";
import { forwardRef as H, useId as N, useContext as v, useEffect as y } from "react";
import { ReactSdkContext as D } from "@webstudio-is/react-sdk/runtime";
const c = "data-ws-video-id", R = {
  HAVE_NOTHING: 0,
  HAVE_METADATA: 1,
  HAVE_CURRENT_DATA: 2,
  HAVE_FUTURE_DATA: 3,
  HAVE_ENOUGH_DATA: 4
}, I = H(
  ({
    $progress: n,
    $visible: r,
    $timeline: f,
    $webstudio$canvasOnly$assetId: U,
    children: l,
    src: s,
    ...A
  }, T) => {
    const a = N(), E = {
      [c]: a
    }, { assetBaseUrl: d } = v(D), b = s != null && s.startsWith(d) ? `/cgi/video/${s.slice(d.length)}` : s;
    return y(() => {
      if (n === void 0 || r === void 0)
        return;
      const e = document.querySelector(`[${c}="${a}"]`);
      if (e === null || !(e instanceof HTMLVideoElement))
        return;
      if (e.play().catch(() => {
      }), e.pause(), f)
        return n.subscribe((t) => {
          if (e.readyState < R.HAVE_METADATA || (e.paused || e.pause(), e.seeking))
            return;
          let u = e.duration;
          Number.isNaN(u) || (Number.isFinite(u) || (u = 60), e.currentTime = (t ?? 0) * u);
        });
      let i = !1, o = !1;
      const m = r.subscribe((t) => {
        o = t, o === !1 && i === !1 && !e.loop && (e.currentTime = 0);
      }), V = n.subscribe((t) => {
        if (i && (t === void 0 || t === 0 || t === 1)) {
          i = !1, e.pause(), o === !1 && i === !1 && !e.loop && (e.currentTime = 0);
          return;
        }
        i || (i = !0, e.ended || e.play().catch(() => {
        }));
      });
      return () => {
        V(), m();
      };
    }, [n, f, r, a]), /* @__PURE__ */ _("video", { src: b, ...A, ...E, ref: T, children: l });
  }
);
I.displayName = "Video";
export {
  I as Video
};
