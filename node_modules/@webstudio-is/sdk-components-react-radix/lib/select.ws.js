import { SelectIcon as o, TriggerIcon as c, FormTextFieldIcon as r, ViewportIcon as l, ContentIcon as i, ItemIcon as p, CheckMarkIcon as s, TextIcon as a } from "@webstudio-is/icons/svg";
import { button as d, span as t, div as n } from "@webstudio-is/sdk/normalize.css";
import { radix as e } from "./shared/meta.js";
import { propsSelect as S, propsSelectTrigger as m, propsSelectValue as I, propsSelectViewport as g, propsSelectContent as y, propsSelectItem as h, propsSelectItemIndicator as T, propsSelectItemText as x } from "./__generated__/select.props.js";
const b = {
  icon: o,
  contentModel: {
    category: "instance",
    children: ["instance"],
    descendants: [e.SelectTrigger, e.SelectContent]
  },
  initialProps: ["name", "value", "open", "required"],
  props: S
}, f = {
  icon: c,
  contentModel: {
    category: "none",
    children: ["instance"],
    descendants: [e.SelectValue]
  },
  presetStyle: { button: d },
  props: m
}, w = {
  label: "Value",
  icon: r,
  contentModel: {
    category: "none",
    children: []
  },
  presetStyle: { span: t },
  initialProps: ["placeholder"],
  props: I
}, v = {
  icon: i,
  contentModel: {
    category: "none",
    children: ["instance"],
    descendants: [e.SelectViewport]
  },
  presetStyle: { div: n },
  props: y
}, P = {
  icon: l,
  contentModel: {
    category: "none",
    children: ["instance"],
    descendants: [e.SelectItem]
  },
  presetStyle: { div: n },
  props: g
}, k = {
  icon: p,
  contentModel: {
    category: "none",
    children: ["instance"],
    descendants: [e.SelectItemIndicator, e.SelectItemText]
  },
  presetStyle: { div: n },
  initialProps: ["value"],
  props: h
}, F = {
  label: "Indicator",
  icon: s,
  contentModel: {
    category: "none",
    children: ["instance"]
  },
  presetStyle: { span: t },
  props: T
}, q = {
  label: "Item Text",
  icon: a,
  contentModel: {
    category: "none",
    children: ["instance", "rich-text"]
  },
  presetStyle: { span: t },
  props: x
};
export {
  b as metaSelect,
  v as metaSelectContent,
  k as metaSelectItem,
  F as metaSelectItemIndicator,
  q as metaSelectItemText,
  f as metaSelectTrigger,
  w as metaSelectValue,
  P as metaSelectViewport
};
