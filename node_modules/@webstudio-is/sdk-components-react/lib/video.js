import { jsx as y } from "react/jsx-runtime";
import { forwardRef as V, useId as N, useContext as h, useEffect as x } from "react";
import { ReactSdkContext as I } from "@webstudio-is/react-sdk/runtime";
const c = "data-ws-video-id", S = {
  HAVE_METADATA: 1
}, _ = V(
  ({
    $progress: n,
    $visible: r,
    $timeline: f,
    $webstudio$canvasOnly$assetId: p,
    children: l,
    src: s,
    ...b
  }, m) => {
    const a = N(), A = {
      [c]: a
    }, { assetBaseUrl: d } = h(I), T = s != null && s.startsWith(d) ? `/cgi/video/${s.slice(d.length)}` : s;
    return x(() => {
      if (n === void 0 || r === void 0)
        return;
      const e = document.querySelector(`[${c}="${a}"]`);
      if (e === null || !(e instanceof HTMLVideoElement))
        return;
      if (e.play().catch(() => {
      }), e.pause(), f)
        return n.subscribe((t) => {
          if (e.readyState < S.HAVE_METADATA || (e.paused || e.pause(), e.seeking))
            return;
          let u = e.duration;
          Number.isNaN(u) || (Number.isFinite(u) || (u = 60), e.currentTime = (t ?? 0) * u);
        });
      let i = !1, o = !1;
      const v = r.subscribe((t) => {
        o = t, o === !1 && i === !1 && !e.loop && (e.currentTime = 0);
      }), E = n.subscribe((t) => {
        if (i && (t === void 0 || t === 0 || t === 1)) {
          i = !1, e.pause(), o === !1 && i === !1 && !e.loop && (e.currentTime = 0);
          return;
        }
        i || (i = !0, e.ended || e.play().catch(() => {
        }));
      });
      return () => {
        E(), v();
      };
    }, [n, f, r, a]), /* @__PURE__ */ y("video", { src: T, ...b, ...A, ref: m, children: l });
  }
);
_.displayName = "Video";
export {
  _ as Video
};
